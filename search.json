[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "The Porous Materials Engineering & Analysis Lab (PMEAL) focuses on the study of atypical porous media, such as engineered materials including electrodes, membranes, filters, papers, and catalyst supports. These materials are a challenge to study using the classic tools and theories developed for the traditional geoscience applications such as rock, sand, and soil.\nResearch in our lab focuses on three main aspects: measuring transport and structural properties by developing novel characterization tools, modeling transport processes and device performance using pore-scale simulations, and making customized materials targeted for specific applications based on the findings and results of the other two steps. We are also interested in visualization of porous materials using x-ray tomography, and extracting information via quantitative analysis on the resultant volumetric images. This aspect of our work actually bridges all three of the main themes.\nPMEAL is run by Prof. Jeff Gostick and is located at the University of Waterloo, in the Department of Chemical Engineering. For more information on the type of projects being pursued by the PMEAL team, take a look at the Publications page, or check out Prof. Gostick’s Google Scholar page."
  },
  {
    "objectID": "posts/2022-02-09/index.html",
    "href": "posts/2022-02-09/index.html",
    "title": "Adding Gravity to Image Based Drainage Simulations",
    "section": "",
    "text": "Adding Gravity to Image Based Drainage Simulations\nThe PMEAL team recently developed a way to add gravitational effects to the standard drainage simulation algorithm based on sphere insertion, also sometimes called morphological image opening or full morphology. The paper is available in Water Resources Research. This post will give a brief overview of how to use this new algorithm, which is being included in a new function called drainage located in the also newly added porespy.simulations module. The new drainage function can produce results with or without gravity effects, creating a more powerful yet flexible function for performing such simulations.\n\nimport porespy as ps\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom edt import edt\n\nStart by generating a 2D image of blobs:\n\nim = ps.generators.blobs([600, 600], porosity=0.7, blobiness=1.5)\nps.imshow(im);\n\n\n\n\n\n\n\n\nFirst we’ll compute a reference capillary pressure curve with no gravity effects using the new drainage function. This function requires us to supply an image of capillary pressure values associated with each voxel. Typicall one would use the Washburn equation:\n\\[ P_C = -2\\sigma \\cos (\\theta) \\bigg(\\frac{1}{r}\\bigg) \\]\nwhere r is conveniently provided by the distance transfer. This can be computed as follows:\n\nvoxel_size = 1e-4\ndt = edt(im)\npc = -2*0.072*np.cos(np.deg2rad(180))/(dt*voxel_size)\n\nThe reason for requiring pc instead of just the boolean im is to allow users to compute the capillary pressure using any method they wish. For instance a 2D image of a glass micromodel has a spacing between the plates which can be accounted for as:\n\\[ P_C = -\\sigma \\cos (\\theta) \\bigg(\\frac{1}{r} + \\frac{1}{s}\\bigg) \\]\nNote that s could be set to np.inf for a 2D simulation. Computing pc externally also reduces the number of arguments that must be sent to the function, by eliminating the surface tension and contact angles.\nIn any event, the function is called as follows:\n\ninlets = np.zeros_like(im)\ninlets[0, ...] = True\ndrn = ps.simulations.drainage(pc=pc, im=im, inlets=inlets, voxel_size=voxel_size, g=0)\nps.imshow(np.log10(drn.im_pc))\ncbar = plt.colorbar()\ncbar.set_label('log10(Pc)');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe above image is colored according to the capillary pressure at which a given voxel was invaded. Note that we have applied a base-10 logarithm to the values to improve visibility. This format is handy since it contains the entire invasion sequence in a single image. Next let’s plot the capillary pressure curve. There are some functions available in porespy.metrics for this, but the drainage function actually does it for us and attaches the result to the returned object:\n\nplt.semilogx(drn.pc, drn.snwp, 'b-o')\nplt.xlabel('Capillary Pressure [Pa]')\nplt.ylabel('Non-wetting Phase Saturation');\n\n\n\n\n\n\n\n\nNow let’s perform the same experiment but including the gravity effects:\n\ndrn2 = ps.simulations.drainage(pc=pc, im=im, inlets=inlets, voxel_size=voxel_size, g=9.81)\nps.imshow(np.log10(drn2.im_pc))\ncbar = plt.colorbar()\ncbar.set_label('log10(Pc)');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can see from the colormap that the invasion pattern is different. Plotting the capillary pressure curve will make the differences more obvious:\n\nplt.semilogx(drn2.pc, drn2.snwp, 'r-o')\nplt.xlabel('Capillary Pressure [Pa]')\nplt.ylabel('Non-wetting Phase Saturation');\n\n\n\n\n\n\n\n\nCombining both plots together for a better comparison:\n\nplt.semilogx(drn.pc, drn.snwp, 'b-o')\nplt.semilogx(drn2.pc, drn2.snwp, 'r-o')\nplt.xlabel('Capillary Pressure [Pa]')\nplt.ylabel('Non-wetting Phase Saturation');\n\n\n\n\n\n\n\n\nThe red curve above is shifted to the right with a lower slope. This is the expected result since the impact of gravity makes it more difficult for the heavy non-wetting fluid to rise up the domain and penetrate into pores. The decresed slope is also expected since pores are invaded more gradually rather than in a larger percolation event."
  },
  {
    "objectID": "posts/2024-06-06/index.html",
    "href": "posts/2024-06-06/index.html",
    "title": "Introducing QBIP: a new image-based fluid invasion algorithm including gravity and built for speed",
    "section": "",
    "text": "Today we pushed our preprint to the Ar\\(\\chi\\)iv, so we can show off our great new “Queue-Based Invasion Percolation” algorithm (QBIP) while we wait for the peer review process to run its course.\nTo appreciate this new algorithm requires some backstory: In 2022 we published a paper in Water Resources Research describing a modified version of the classic Morphological Image Opening approach that included the effect of gravity on the fluid. Around the same time we published a paper in Computers and the Geosciences where we used image-based tools to simulate the volume controlled invasion of a non-wetting fluid. This algorithm differed from the the traditional Image Morphology approaches because it followed a volume-controlled rather than a pressure controlled invasion. The allowed it to simulate entire invasion path rather than just providing the stable fluid configuration at discrete pressures. The animation below illustrates the output of the volume-controlled approach:\n\nNow getting to the exciting part of this announcement: we have now combined the above to algorithms to provide an volume-controlled invasion with the effect of gravity. The result is something like this:\n\nIn the above animation you can see that the invading fluid is being impacted by gravity, resulting in a flatter invasion front. Instead of invading a large throat at a high elevation in the image, the fluid prefers to invade a smaller opening near the bottom because it does not have to overcome the effect of gravity.\nAnother very nice feature of the QBIP algorithm is that it is at leat 10X faster than the original IBIP. We were able to achieve this by using a priorty queue to keep track of which voxel to invade next rather than searching for it on each step. So not only does the new QBIP algorithm yield fluid invasion paths under the influence of gravity (or not), but it can also do this in a much more reasonable time.\n\nThis work was a collaboration between the PMEAL group at the University of Waterloo, and the group of Robin Zhao at McMaster University. Robin and his team provided the experimental micromodel data which was used to validate the model. It was great to work with them and given how close they are, I’m sure we’ll be doing more collaboration soon.\nAnyway, we hope you find this new algorithm useful."
  },
  {
    "objectID": "posts/2021-07-04/index.html",
    "href": "posts/2021-07-04/index.html",
    "title": "PMEAL Blog and Website now hosted on Github Pages",
    "section": "",
    "text": "PMEAL Blog and Website now hosted on Github Pages\nWe used to host all our websites, openpnm.org, porespy.org and pmeal.com, on an Amazon cloud server using Wordpress. A few months we updated the PoreSpy website/landing page to be the same as the documentation site and moved it to Github instead of “Read The Docs”. Having all the code and docs in the same place was very handy, so we did the same thing to the OpenPNM website. Now that we are only hosting one website on the Wordpress instance, it makes sense to move PMEAL over to Github as well. The new site is not quite as fancy looking due limitations of the static build of Github Pages, but seems to looking pretty good so far. Over the next few weeks we’ll be improving things."
  },
  {
    "objectID": "posts/2021-12-14/index.html",
    "href": "posts/2021-12-14/index.html",
    "title": "Prof Gostick presents new image-based invasion algorithm at AGU21",
    "section": "",
    "text": "Prof Gostick presents new image-based invasion algorithm at AGU21\nThe annual fall meeting of the Americal Geophysical Union (aka AGU) is underway this week. The PMEAL group gave a talk about our new image-based invasion algorithm that incorporates gravity. This work was motivated by the ever increasing size of tomograms, which introduces the possibility that gravity may impact the phase distributions. Standard sphere insertion algorithms only include capillary effects, so this work extended them to also include gravity. This work is currently under review, so a more detailed announcement and demonstration will be made when it’s accepted, but for now you can watch a pre-recorded video of the talk here."
  },
  {
    "objectID": "posts/2022-10-10/index.html",
    "href": "posts/2022-10-10/index.html",
    "title": "What’s New in OpenPNM V3",
    "section": "",
    "text": "It’s been a long process, much longer than we would’ve liked, but OpenPNM Version 3.0 is finally here. Version 2.0 was released in August 2018, and version 2.8.2, the last of the V2 series, was released in September 2021. This 3 year stretch saw a lot growth in the OpenPNM userbase, which if we use the Github star count as a proxy, showed a 300% increase over the period!\n\nA lot has happened over these four years, and it’s been quite a blur so it’s hard to remember which milestones to highlight. One major event or theme was the PMEAL group receiving funding from CANARIE to support the growth of OpenPNM (and PoreSpy). This funding allowed for the hiring of many highly talented students who really took OpenPNM to the next level.\n\n\nThere have been a LOT of useful and powerful additions to V3, but perhaps the biggest change is what’s missing:\n\nV3 has removed the concept of Geometry and Physics objects. This “workflow” was invented on the whiteboard during our initial planning sessions for V1 in 2011, and looked sensible at the time, but over the past 10+ years it became clear that this created a lot of confusion for users and a friction for the developers.\n\nFor comparison let’s look at how this changes the scripts. In version 2 you’d initialize 4 objects:\n```{python}\nimport openpnm as op\npn = op.network.Cubic(shape=[5, 5, 5], spacing=1e-5)\ngeo = op.network.SphersAndCylinders(network=pn, pores=pn.Ps, throats=pn.Ts)\nair = op.phases.Air(network=pn)\nphys = op.physics.Standard(network=pn, geometry=geo, phase=air)\n```\nWhile in version 3 the same result is obtained as follows:\n```{python}\nimport openpnm as op\npn = op.network.Cubic(shape=[5, 5, 5], spacing=1e-5)\npn.add_model_collection(op.models.collections.geometry.spheres_and_cylinders)\nair = op.phase.Air(network=pn)\nair.add_model_collection(op.models.collections.physics.standard)\n```\nThis difference results in several important changes:\n\nBack End Simplicity: The ‘back-end’ code complexity was massively reduced, which will make it far easier to maintain OpenPNM moving forward. There was quite a lot of machinery dedicated to tracking which pores and throats were assigned to geo, and that phys was associated with geo. For instance, in cases where multiple domains were used, such as geo1 and geo2 a lot of checks were done behind the scenes to ensure they did not conflict with each other and that all pores and throats were accounted for. There was also functionality required for ‘redefining’ which pores and throats they were applied to, and so on. Easily thousands of lines of code were deleted by this change.\n\nFewer Objects to Think About: Speaking of multiple domains, most users probably did not use this capability, but for those who did, this change will result in a much simpler experience. In most cases the effects of multiple domains are only relevant to geometries, so one might specify geo1 and geo2 each with different pore size distributions, but probably the same physics applied to each domain. In the old approach, you had to create a unique Physics object associated with each subdomain, but now you can just add a single set of physics models to a phase and they can apply everywhere.\n\nEmphasizes Pore-Scale Models: Although we’ve attempted to make this new approach as smooth as possible, there is no such thing as a free lunch, and the user must still invest some effort in defining which models to assign (and where). We have created collections to facilitate this process, which are demonstrated above. In V2 when you initialized a StickAndBall object it added all the models as part of the initialization. In V3 you create a network, then add all the models yourself, which is where the collections come in handy. A positive take of this new approach is that users are now forced interact with pore-scale models, which are the foundation of OpenPNM’s calculations, so hopefully this encourage them to write and use their own models.\n\nEasy Multidomain Control: We have created a new way defining multiple domains, or more to the point, we created a way to assign different pore-scale models to specific pores. In the pn.models dictionary you will find all the models defined on the network, but now each model name also includes the domain where it applies, so instead of 'pore.diameter', it’s 'pore.diameter@&lt;xyz&gt;', where @ is a delimiter and &lt;xyz&gt; is the name of a label on the network. The default is '@all', meaning the model applies everywhere. To create two domains with different pore sizes you now define different models such as pn.models['pore.diameter@domain1'] and pn.models['pore.diameter@domain2']. Conveniently, you don’t need to specify different models for other properties like 'pore.volume' (unless you want to).\nThe best way to illustrate this change is by example. The code snippets below will create a domain with 2 different pore sizes, but all other models the same. It will then change the domains so that different pores are assigned to each domain.\n\nimport openpnm as op\npn = op.network.Cubic(shape=[5, 5, 1], spacing=1.0)\nPs1 = pn.coords[:, 0] &lt; 2\npn.set_label(label='domain1', pores=Ps1)\npn.set_label(label='domain2', pores=~Ps1)\nax = op.visualization.plot_coordinates(network=pn, pores=pn.pores('domain1'), c='r', s=100)\nax = op.visualization.plot_coordinates(network=pn, pores=pn.pores('domain2'), c='b', s=100, ax=ax)\nop.visualization.plot_connections(pn, c='k', ax=ax);\n\n\n\n\n\n\n\n\nNow let’s retrieve the stick_and_ball geometry model collection, create a copy, alter the pore sizes on them, then assign each to different pores:\n\nmods1 = op.models.collections.geometry.spheres_and_cylinders\nmods2 = mods1.copy()\npn.add_model_collection(mods1, domain='domain1')\npn.add_model_collection(mods2, domain='domain2')\n\nLet’s replace the model used for computing the pore diameter with a random number between some limits, which we’ll use to create a layer of small and large pores.\n\npn.add_model(propname='pore.diameter', \n             model=op.models.geometry.pore_size.random,\n             num_range=[0.01, 0.2],\n             domain='domain1')\npn.add_model(propname='pore.diameter', \n             model=op.models.geometry.pore_size.random,\n             num_range=[0.8, 0.99],\n             domain='domain2')\nax = op.visualization.plot_coordinates(network=pn, s=500, size_by=pn['pore.diameter'], edgecolor='k')\nop.visualization.plot_connections(pn, c='k', ax=ax);\n\n\n\n\n\n\n\n\nThis new approach may take some getting used to, but hopefully it has enough upsides to make it worth it. We don’t dive into all of these here, but let’s just look at one feature which will hopefully make it clear why this new approach simplifies the back-end. Lets change which pores belong to domain1 and domain2 just by adjusting the labels. In the previous version this required calls to the set_locations methods of all the geometry objects. In V3 we just need to change some pore labels and regenerate the models:\n\npn.set_label(label='domain1', pores=pn.coords[:, 0] &lt; 3, mode='overwrite')\npn.set_label(label='domain2', pores=pn.coords[:, 0] &gt; 3, mode='overwrite')\npn.regenerate_models()\nax = op.visualization.plot_coordinates(network=pn, s=500, size_by=pn['pore.diameter'], edgecolor='k')\nop.visualization.plot_connections(pn, c='k', ax=ax);\n\n[14:25:08] WARNING  throat.max_size was not run since the following property is missing:             _models.py:480\n                    'throat.domain1'                                                                               \n\n\n\n           WARNING  throat.diameter was not run since the following property is missing:             _models.py:480\n                    'throat.max_size'                                                                              \n\n\n\n           WARNING  throat.cross_sectional_area was not run since the following property is missing: _models.py:480\n                    'throat.diameter'                                                                              \n\n\n\n           WARNING  throat.hydraulic_size_factors was not run since the following property is        _models.py:480\n                    missing: 'throat.domain1'                                                                      \n\n\n\n           WARNING  throat.diffusive_size_factors was not run since the following property is        _models.py:480\n                    missing: 'throat.domain1'                                                                      \n\n\n\n           WARNING  throat.lens_volume was not run since the following property is missing:          _models.py:480\n                    'throat.diameter'                                                                              \n\n\n\n           WARNING  throat.length was not run since the following property is missing:               _models.py:480\n                    'throat.domain1'                                                                               \n\n\n\n           WARNING  throat.total_volume was not run since the following property is missing:         _models.py:480\n                    'throat.length'                                                                                \n\n\n\n           WARNING  throat.volume was not run since the following property is missing:               _models.py:480\n                    'throat.total_volume'                                                                          \n\n\n\n\n\n\n\n\n\n\nThe key here, from a back-end perspective is that OpenPNM did literally nothing behind the scenes. Only the labels were changed by the user, and OpenPNM just adapted.\n\n\n\nThere have been a handful of other breaking changes including:\n\nRenamed of the phases module to phase. This was purely cosmetic so that all modules have consistant pluralization.\nRemoved the term “Generic” from the numerous class names to avoid overly complicating things. Instead of instantiating a GenericPhase it is now just Phase.\nMoved of the plotting tools to a new visualization module. Previously they were in topotools which was not really obvious.\nOverhaul of the io module to be a collection of clearly named functions like network_from_statoil rather than categorized functions like statoil.load. This is more consistant with other packages like pandas which offer functions like from_csv.\nThe Bravais network generator has been removed in favor of specificly named classes like FaceCenteredCubic and BodyCenteredCubic.\nA lot of minor functions and features were removed. This was done in the spirit of keeping the code base small and manageble, which we’d grown to realize was a very important design consideration.\nSubdictionaries now work as expected, so that pn['pore.conduit_length']['pore1'] works the same as pn['pore.conduit_length.pore1']. We also updated many of the models to return Nt-by-3 arrays of conduit properties rather than a dictionary.\nMigrated to a new documentation engine and website generator, which creates very beautiful example pages from jupyter notebooks, making it super easy to write a high quality and detailed tutorial for the website. This paved the way for the next few items…\nRemoved the metrics module, in favor of creating detailed examples on the website. We created these metrics as a way to make OpenPNM even easier to use, but they only obscurred from the user what were relatively simple calculations.\nRemoved the materials module, which will also be replaced by detailed examples on the website.\n\n\n\n\n\nTransient solvers have been extended substantially. In V2 we’d implemented the basic Implicit and Crank-Nicolson methods, while in V3 we leverage the scipy.integrate.ivp_solve library to access their high-order explicit solvers. In V3.0 we have created wrappers for RK45, but more are planned. These wrappers are in the new integrators module.\nRedesigned the numerical solver framework. We added a new module called solvers containing classes which define how to wrap any arbitrary numerical solver library. At present we have wrappers for pypardiso and scipy.linalg.spsolve, but more are planned.\nA framework for estimating physical properties of mixtures. The property calculations are based on the chemicals package and provides a first approximation for computing properties that are functions on composition which may change during a simulation.\nComplete rewrite of the ordinary percolation algorithm, now called Drainage.\nDefinition of pore size factors which contain all the information about the shape of pores and throats. This means that computing of diffusive flow through an element is done as \\(N_A = D_{AB} \\cdot f_{size} \\Delta C_A\\) where the length and area of the element are embedded in \\(f_{size}\\) which includes a rigorous analyztical description of the changing cross-sectional shape.\n\n\n\n\nDuring this past 3 years we’ve also migrated all of our continuous integration testing and release process to Github Actions. One of the great side effects of this that we can now generate very detailed changelogs from the commit messages for each merge onto the dev branch. The full change can be viewed here."
  },
  {
    "objectID": "posts/2022-10-10/index.html#overview-of-the-biggest-change",
    "href": "posts/2022-10-10/index.html#overview-of-the-biggest-change",
    "title": "What’s New in OpenPNM V3",
    "section": "",
    "text": "There have been a LOT of useful and powerful additions to V3, but perhaps the biggest change is what’s missing:\n\nV3 has removed the concept of Geometry and Physics objects. This “workflow” was invented on the whiteboard during our initial planning sessions for V1 in 2011, and looked sensible at the time, but over the past 10+ years it became clear that this created a lot of confusion for users and a friction for the developers.\n\nFor comparison let’s look at how this changes the scripts. In version 2 you’d initialize 4 objects:\n```{python}\nimport openpnm as op\npn = op.network.Cubic(shape=[5, 5, 5], spacing=1e-5)\ngeo = op.network.SphersAndCylinders(network=pn, pores=pn.Ps, throats=pn.Ts)\nair = op.phases.Air(network=pn)\nphys = op.physics.Standard(network=pn, geometry=geo, phase=air)\n```\nWhile in version 3 the same result is obtained as follows:\n```{python}\nimport openpnm as op\npn = op.network.Cubic(shape=[5, 5, 5], spacing=1e-5)\npn.add_model_collection(op.models.collections.geometry.spheres_and_cylinders)\nair = op.phase.Air(network=pn)\nair.add_model_collection(op.models.collections.physics.standard)\n```\nThis difference results in several important changes:\n\nBack End Simplicity: The ‘back-end’ code complexity was massively reduced, which will make it far easier to maintain OpenPNM moving forward. There was quite a lot of machinery dedicated to tracking which pores and throats were assigned to geo, and that phys was associated with geo. For instance, in cases where multiple domains were used, such as geo1 and geo2 a lot of checks were done behind the scenes to ensure they did not conflict with each other and that all pores and throats were accounted for. There was also functionality required for ‘redefining’ which pores and throats they were applied to, and so on. Easily thousands of lines of code were deleted by this change.\n\nFewer Objects to Think About: Speaking of multiple domains, most users probably did not use this capability, but for those who did, this change will result in a much simpler experience. In most cases the effects of multiple domains are only relevant to geometries, so one might specify geo1 and geo2 each with different pore size distributions, but probably the same physics applied to each domain. In the old approach, you had to create a unique Physics object associated with each subdomain, but now you can just add a single set of physics models to a phase and they can apply everywhere.\n\nEmphasizes Pore-Scale Models: Although we’ve attempted to make this new approach as smooth as possible, there is no such thing as a free lunch, and the user must still invest some effort in defining which models to assign (and where). We have created collections to facilitate this process, which are demonstrated above. In V2 when you initialized a StickAndBall object it added all the models as part of the initialization. In V3 you create a network, then add all the models yourself, which is where the collections come in handy. A positive take of this new approach is that users are now forced interact with pore-scale models, which are the foundation of OpenPNM’s calculations, so hopefully this encourage them to write and use their own models.\n\nEasy Multidomain Control: We have created a new way defining multiple domains, or more to the point, we created a way to assign different pore-scale models to specific pores. In the pn.models dictionary you will find all the models defined on the network, but now each model name also includes the domain where it applies, so instead of 'pore.diameter', it’s 'pore.diameter@&lt;xyz&gt;', where @ is a delimiter and &lt;xyz&gt; is the name of a label on the network. The default is '@all', meaning the model applies everywhere. To create two domains with different pore sizes you now define different models such as pn.models['pore.diameter@domain1'] and pn.models['pore.diameter@domain2']. Conveniently, you don’t need to specify different models for other properties like 'pore.volume' (unless you want to).\nThe best way to illustrate this change is by example. The code snippets below will create a domain with 2 different pore sizes, but all other models the same. It will then change the domains so that different pores are assigned to each domain.\n\nimport openpnm as op\npn = op.network.Cubic(shape=[5, 5, 1], spacing=1.0)\nPs1 = pn.coords[:, 0] &lt; 2\npn.set_label(label='domain1', pores=Ps1)\npn.set_label(label='domain2', pores=~Ps1)\nax = op.visualization.plot_coordinates(network=pn, pores=pn.pores('domain1'), c='r', s=100)\nax = op.visualization.plot_coordinates(network=pn, pores=pn.pores('domain2'), c='b', s=100, ax=ax)\nop.visualization.plot_connections(pn, c='k', ax=ax);\n\n\n\n\n\n\n\n\nNow let’s retrieve the stick_and_ball geometry model collection, create a copy, alter the pore sizes on them, then assign each to different pores:\n\nmods1 = op.models.collections.geometry.spheres_and_cylinders\nmods2 = mods1.copy()\npn.add_model_collection(mods1, domain='domain1')\npn.add_model_collection(mods2, domain='domain2')\n\nLet’s replace the model used for computing the pore diameter with a random number between some limits, which we’ll use to create a layer of small and large pores.\n\npn.add_model(propname='pore.diameter', \n             model=op.models.geometry.pore_size.random,\n             num_range=[0.01, 0.2],\n             domain='domain1')\npn.add_model(propname='pore.diameter', \n             model=op.models.geometry.pore_size.random,\n             num_range=[0.8, 0.99],\n             domain='domain2')\nax = op.visualization.plot_coordinates(network=pn, s=500, size_by=pn['pore.diameter'], edgecolor='k')\nop.visualization.plot_connections(pn, c='k', ax=ax);\n\n\n\n\n\n\n\n\nThis new approach may take some getting used to, but hopefully it has enough upsides to make it worth it. We don’t dive into all of these here, but let’s just look at one feature which will hopefully make it clear why this new approach simplifies the back-end. Lets change which pores belong to domain1 and domain2 just by adjusting the labels. In the previous version this required calls to the set_locations methods of all the geometry objects. In V3 we just need to change some pore labels and regenerate the models:\n\npn.set_label(label='domain1', pores=pn.coords[:, 0] &lt; 3, mode='overwrite')\npn.set_label(label='domain2', pores=pn.coords[:, 0] &gt; 3, mode='overwrite')\npn.regenerate_models()\nax = op.visualization.plot_coordinates(network=pn, s=500, size_by=pn['pore.diameter'], edgecolor='k')\nop.visualization.plot_connections(pn, c='k', ax=ax);\n\n[14:25:08] WARNING  throat.max_size was not run since the following property is missing:             _models.py:480\n                    'throat.domain1'                                                                               \n\n\n\n           WARNING  throat.diameter was not run since the following property is missing:             _models.py:480\n                    'throat.max_size'                                                                              \n\n\n\n           WARNING  throat.cross_sectional_area was not run since the following property is missing: _models.py:480\n                    'throat.diameter'                                                                              \n\n\n\n           WARNING  throat.hydraulic_size_factors was not run since the following property is        _models.py:480\n                    missing: 'throat.domain1'                                                                      \n\n\n\n           WARNING  throat.diffusive_size_factors was not run since the following property is        _models.py:480\n                    missing: 'throat.domain1'                                                                      \n\n\n\n           WARNING  throat.lens_volume was not run since the following property is missing:          _models.py:480\n                    'throat.diameter'                                                                              \n\n\n\n           WARNING  throat.length was not run since the following property is missing:               _models.py:480\n                    'throat.domain1'                                                                               \n\n\n\n           WARNING  throat.total_volume was not run since the following property is missing:         _models.py:480\n                    'throat.length'                                                                                \n\n\n\n           WARNING  throat.volume was not run since the following property is missing:               _models.py:480\n                    'throat.total_volume'                                                                          \n\n\n\n\n\n\n\n\n\n\nThe key here, from a back-end perspective is that OpenPNM did literally nothing behind the scenes. Only the labels were changed by the user, and OpenPNM just adapted."
  },
  {
    "objectID": "posts/2022-10-10/index.html#other-important-changes",
    "href": "posts/2022-10-10/index.html#other-important-changes",
    "title": "What’s New in OpenPNM V3",
    "section": "",
    "text": "There have been a handful of other breaking changes including:\n\nRenamed of the phases module to phase. This was purely cosmetic so that all modules have consistant pluralization.\nRemoved the term “Generic” from the numerous class names to avoid overly complicating things. Instead of instantiating a GenericPhase it is now just Phase.\nMoved of the plotting tools to a new visualization module. Previously they were in topotools which was not really obvious.\nOverhaul of the io module to be a collection of clearly named functions like network_from_statoil rather than categorized functions like statoil.load. This is more consistant with other packages like pandas which offer functions like from_csv.\nThe Bravais network generator has been removed in favor of specificly named classes like FaceCenteredCubic and BodyCenteredCubic.\nA lot of minor functions and features were removed. This was done in the spirit of keeping the code base small and manageble, which we’d grown to realize was a very important design consideration.\nSubdictionaries now work as expected, so that pn['pore.conduit_length']['pore1'] works the same as pn['pore.conduit_length.pore1']. We also updated many of the models to return Nt-by-3 arrays of conduit properties rather than a dictionary.\nMigrated to a new documentation engine and website generator, which creates very beautiful example pages from jupyter notebooks, making it super easy to write a high quality and detailed tutorial for the website. This paved the way for the next few items…\nRemoved the metrics module, in favor of creating detailed examples on the website. We created these metrics as a way to make OpenPNM even easier to use, but they only obscurred from the user what were relatively simple calculations.\nRemoved the materials module, which will also be replaced by detailed examples on the website."
  },
  {
    "objectID": "posts/2022-10-10/index.html#exciting-additions",
    "href": "posts/2022-10-10/index.html#exciting-additions",
    "title": "What’s New in OpenPNM V3",
    "section": "",
    "text": "Transient solvers have been extended substantially. In V2 we’d implemented the basic Implicit and Crank-Nicolson methods, while in V3 we leverage the scipy.integrate.ivp_solve library to access their high-order explicit solvers. In V3.0 we have created wrappers for RK45, but more are planned. These wrappers are in the new integrators module.\nRedesigned the numerical solver framework. We added a new module called solvers containing classes which define how to wrap any arbitrary numerical solver library. At present we have wrappers for pypardiso and scipy.linalg.spsolve, but more are planned.\nA framework for estimating physical properties of mixtures. The property calculations are based on the chemicals package and provides a first approximation for computing properties that are functions on composition which may change during a simulation.\nComplete rewrite of the ordinary percolation algorithm, now called Drainage.\nDefinition of pore size factors which contain all the information about the shape of pores and throats. This means that computing of diffusive flow through an element is done as \\(N_A = D_{AB} \\cdot f_{size} \\Delta C_A\\) where the length and area of the element are embedded in \\(f_{size}\\) which includes a rigorous analyztical description of the changing cross-sectional shape."
  },
  {
    "objectID": "posts/2022-10-10/index.html#full-changelog-on-github",
    "href": "posts/2022-10-10/index.html#full-changelog-on-github",
    "title": "What’s New in OpenPNM V3",
    "section": "",
    "text": "During this past 3 years we’ve also migrated all of our continuous integration testing and release process to Github Actions. One of the great side effects of this that we can now generate very detailed changelogs from the commit messages for each merge onto the dev branch. The full change can be viewed here."
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "In the Porous Materials Engineering and Analysis Lab (PMEAL) we study structural and transport properties of non-conventional porous media. By non-conventional media, we refer to materials other than rock and soil which have long been the focus of porous media researchers looking at oil recovery and aquifer management. Non-conventional materials, on the other hand, include electrodes, filters, thin porous films, tissue scaffolds, nanoporous catalysts, and phase segregated polymers. These atypical materials present many new challenges, from simple problems like designing suitable sample holders, to philosophical questions like whether the continuum approximation is satisfied when modeling transport in a layer that is only 10 pores thick. The research cycle in the PMEAL Group involves measuring structural characteristics and transport properties, modeling the transport phenomena in devices to predict performance, and then actually making optimized materials based on the results of the previous steps. Brief examples of each step are given below.\n\n\n\n\nThe PMEAL group is the lead developer of the OpenPNM package for performing pore network modeling of porous materials. This package is now fairly mature and is being used by a number of research groups around the world. OpenPNM has been awarded multiple grants from CANARIE to enhance the package.\n\nWe are also the lead developers of PoreSpy, a collection of functions for measuring various properties of tomography images of porous materials (i.e. volumetric images). This project uses Python and other open source tools, rather than relying on proprietary software. This image shows the pore-size function of the image obtained by inscribing successively smaller spheres in the void space and assigning voxels to the largest engulfing sphere.\n\nDirect numerical simulation on 3D voxel-based images is becoming increasingly common as computers can handle ever larger data sets, and X-ray tomography devices become more widely available. PMEAL is involved in modeling of reaction and transport directly in the voxel-domain using tools such as the Lattice-Boltzmann method. This work interleaves closely with our PoreSpy package, and is complimentary to OpenPNM. This image shows an ionic solution flowing through a fibrous electrode and undergoing a electrochemical reaction at the fiber surfaces that depletes the reactant concentration (red) far before the outlet.\n\n\n\n\n\nElectrospinning is an old technique that is seeing new life in the past decade due to its ability to make a very wide range of interesting fibrous materials. PMEAL has been utilizing this technique to produce optimized electrodes for flow batteries. Compared to commercially available materials, the target material has smaller fibers for increased surface area and high porosity to enhance the permeability. This image shows commercial materials with 10 um diameter fibers, compared to our electrospun materials with 1 um diameter fibers. The much smaller fiber size has shown to be highly advantageous for in-situ flow battery performance, as outlined in our recent publications.\n\n\n\n\nOne of the ongoing challenges when studying novel, atypical, or non-conventional porous materials is a lack of standard tools for measuring their structural and transport properties. The porous media literature is filled with solutions for rock cores and sandpacks, but much less has been done toward studying materials that are only 100 um thick, 90% porosity, composed of highly aligned fibers, and so on. The PMEAL Group has a strong track record developing novel experimental protocols and tools for such situations. We recently reported a method for measuring effective diffusivity (i.e. tortuosity) using a radial sample holder that requires no sealing gaskets, allowing its use on very thin layers."
  },
  {
    "objectID": "research.html#model",
    "href": "research.html#model",
    "title": "Research",
    "section": "",
    "text": "The PMEAL group is the lead developer of the OpenPNM package for performing pore network modeling of porous materials. This package is now fairly mature and is being used by a number of research groups around the world. OpenPNM has been awarded multiple grants from CANARIE to enhance the package.\n\nWe are also the lead developers of PoreSpy, a collection of functions for measuring various properties of tomography images of porous materials (i.e. volumetric images). This project uses Python and other open source tools, rather than relying on proprietary software. This image shows the pore-size function of the image obtained by inscribing successively smaller spheres in the void space and assigning voxels to the largest engulfing sphere.\n\nDirect numerical simulation on 3D voxel-based images is becoming increasingly common as computers can handle ever larger data sets, and X-ray tomography devices become more widely available. PMEAL is involved in modeling of reaction and transport directly in the voxel-domain using tools such as the Lattice-Boltzmann method. This work interleaves closely with our PoreSpy package, and is complimentary to OpenPNM. This image shows an ionic solution flowing through a fibrous electrode and undergoing a electrochemical reaction at the fiber surfaces that depletes the reactant concentration (red) far before the outlet."
  },
  {
    "objectID": "research.html#make",
    "href": "research.html#make",
    "title": "Research",
    "section": "",
    "text": "Electrospinning is an old technique that is seeing new life in the past decade due to its ability to make a very wide range of interesting fibrous materials. PMEAL has been utilizing this technique to produce optimized electrodes for flow batteries. Compared to commercially available materials, the target material has smaller fibers for increased surface area and high porosity to enhance the permeability. This image shows commercial materials with 10 um diameter fibers, compared to our electrospun materials with 1 um diameter fibers. The much smaller fiber size has shown to be highly advantageous for in-situ flow battery performance, as outlined in our recent publications."
  },
  {
    "objectID": "research.html#measure",
    "href": "research.html#measure",
    "title": "Research",
    "section": "",
    "text": "One of the ongoing challenges when studying novel, atypical, or non-conventional porous materials is a lack of standard tools for measuring their structural and transport properties. The porous media literature is filled with solutions for rock cores and sandpacks, but much less has been done toward studying materials that are only 100 um thick, 90% porosity, composed of highly aligned fibers, and so on. The PMEAL Group has a strong track record developing novel experimental protocols and tools for such situations. We recently reported a method for measuring effective diffusivity (i.e. tortuosity) using a radial sample holder that requires no sealing gaskets, allowing its use on very thin layers."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Tips and Tricks\n\n\n\n\n\n\nnews\n\n\ntips\n\n\n\n\n\n\n\n\n\nJan 13, 2025\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducing QBIP: a new image-based fluid invasion algorithm including gravity and built for speed\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJun 5, 2024\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\n4-Phase Pore Network Model of a Fuel Cell Catalyst Layer\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 11, 2023\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nCongratulations to Niloo for successfully defending her PhD!\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nDec 24, 2022\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nWhat’s New in OpenPNM V3\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 10, 2022\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nPMEAL Members Represent Strong at CRSC 2022\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJun 3, 2022\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Gravity to Image Based Drainage Simulations\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nFeb 9, 2022\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nProf Gostick presents new image-based invasion algorithm at AGU21\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nDec 14, 2021\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nProf Gostick Named Inaugural Azzam-Dullien Endowed Professor\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nDec 7, 2021\n\n\nJeff Gostick\n\n\n\n\n\n\n\n\n\n\n\n\nPMEAL Blog and Website now hosted on Github Pages\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJul 4, 2021\n\n\nJeff Gostick\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Visit the Google Scholar site for Prof Gostick and the PMEAL Team\n\n\n\nNone at the moment\n\n\n\n\n\n\n\n\n\n\n\n02\n\n\nMaier L, Pauly L, Gostick JT, Gresser GT, Nieken U. Spontaneous imbibition in thin anisotropic fibrous media: Experiments and numerical modeling. Textile Research Journal\nLinks: Publisher Site\n\n\n\n\n01\n\n\nYu H, Pritzker MD, Gostick JT. Improving Performance of Hybrid Zn-Ce Redox Flow Battery by Controlling Ion Crossover and Use of Mixed Acid Positive Electrolyte. Journal of Applied Electrochemistry.\nLinks: Preprint on ResearchSquare | Publisher Site (Open Access)\n\n\n\n\n\n\n\n\n\n\n\n104\n\n\nLee KM, Alizadeh M, Suzuki T, Tsushima S, Roberts EPL, Gostick JT. Multiphysics Simulation of Multi-layered Fibrous Electrodes for the Vanadium Redox Flow Battery. Journal of the Electrochemical Society. 171(9) 090534. (2024)\nLinks: Publisher Site (Open access PDF)\n\n\n\n\n103\n\n\nRahman Y, Gostick JT, Ioannidis MA. Nanoparticle Transport in Partially Saturated Porous Media: Attachment at Fluid Interfaces. Advances in Water Resources. 193(11), 104816 (2024)\nLinks: Publisher Site\n\n\n\n\n102\n\n\nGostick JT, Misaghian N, Irannezhad A, Zhao B. A computationally efficient queue-based algorithm for simulating volume-controlled drainage under the influence of gravity on volumetric images. Advances in Water Resources. 193(11) 104799 (2024)\nLinks: Preprint on ArXiv | Publisher Site (Open Access)\n\n\n\n\n101\n\n\nAlizadeh, M, Gostick JT, Suzuki T, Tsushima S. Topological optimization for tailored designs of advection-diffusion-reaction porous reactors based on pore scale modeling and simulation. Computers & Structures. 301(9), 107452 (2024)\nLinks: Publisher Site | Preprint on ChemarXiv\n\n\n\n\n100\n\n\nBell E, Morris DRP, Sadeghi MA, Gostick JT. BEaTmap: Simplified rigorous BET analysis of isothermal adsorption data. Journal of Open Research Software. 12(1), 5-12 (2024)\nLinks: Publisher Site (Open Access)\n\n\n\n\n99\n\n\nLy S, Sadeghi MA, Misaghian N, Fathiannasab H, Gostick JT. Rapid prediction of particle-scale state-of-lithiation in Li-ion battery microstructures using convolutional neural networks. Applied Energy. 360, 122803 (2024)\nLinks: Publisher Site (Open Access)\n\n\n\n\n98\n\n\nKhan ZA, Gostick JT. Enhancing Pore Network Extraction Performance via Seed-Based Pore Region Growing Segmentation. Advances in Water Resources. 183(1), 104591 (2024)\nLinks: Publisher Site\n\n\n\n\n97\n\n\nBurton N, Abdala A, Zarshenas K, Ghanbari S, Somvanshi C, Gostick JT, Pope MA. Unleashing the Potential of Scalable, High-Water Vapour Permeance Graphene Oxide Membranes using Electrospun Supports. Journal of Membrane Science. 690(1), 122142 (2024)\nLinks: Publisher Site\n\n\n\n\n96\n\n\nSadeghi MA, Khan ZA, Agnaou M, Hu L, Litster S, Kongkanand A, Padgett E, Muller DA, Friscic T, Gostick JT*. Predicting PEMFC performance from a volumetric image of catalyst layer structure using pore network modeling. Applied Energy. 353(A), 122004 (2024)\nLinks: Publisher Site\n\n\n\n\n\n\n\n\n\n\n\n\n95\n\n\nOlbrich W, Kadyk T, Sauter U, Eikerling M, Gostick JT. Structure and Conductivity of Ionomer in PEM Fuel Cell Catalyst Layers: A Model-Based Analysis. Scientific Reports. 13(1), 14127 (2023)\nLinks: Publisher Site, with Open Access PDF\n\n\n\n\n94\n\n\nRodriguez de Castro A, Agnaou M, Gostick JT*. Predicting Shear-Thinning Fluid Flows in Porous Media Using Pore Network Modeling: Simulations and Experimental Validation. Transport in Porous Media. 149, 453–478 (2023)\nLinks: Publisher Site\n\n\n\n\n93\n\n\nMisaghian N, Sadeghi MA, Lee KY, Roberts EPL, and Gostick JT*. Utilizing Pore Network Modeling for Performance Analysis of Multi-Layer Electrodes in Vanadium Redox Flow Batteries. Journal of The Electrochemical Society, 170(7) 070520 (2023).\nLinks: Publisher Site\n\n\n\n\n92\n\n\nLee KM, Pahlevaninezhad M, Smith V, Abouali S, Orfino FP, Kjeang E, Pope M, Roberts E, Gostick JT*. Improvement of vanadium redox flow battery performance obtained by compression and laser perforation of electrospun electrodes. Materials Today Energy. 35, 101333 (2023).\nLinks: Publisher Site\n\n\n\n\n91\n\n\nGhanbari S, Golmohammadi M, Gostick JT*. Computational Analysis of Citric Acid Pertraction in Emulsion Liquid Membranes. Canadian Journal of Chemical Engineering. 101(6), 3607-3623 (2023).\nLinks: Publisher Site\n\n\n\n\n90\n\n\nYu H, Pritzker M, Gostick JT. Use of Mixed Methanesulfonic Acid/Sulfuric Acid as Positive Supporting Electrolyte in Zn-Ce Redox Flow Battery. Journal of the Electrochemical Society. 170(2), 020536 (2023).\nLinks: Publisher Site\n\n\n\n\n89\n\n\nKim YW, Urbina LP, Asset T, Secanell M, Atanassov P, Barralet J, Gostick JT. Insights on Designing non-PGM Catalyst Layers at Low Humidity. Journal of Power Sources. 66(4), 232741 (2023).\nLinks: Publisher Site\n\n\n\n\n88\n\n\nvan Gorp R, van der Heijden M, Sadeghi MA, Gostick JT, and Forner-Cuenca A. Bottom-up design of porous electrode by combining a genetic algorithm and a pore network model. Chemical Engineering Journal. Volume 455(1), 139947 (2023)\nLinks: Publisher Site\n\n\n\n\n\n\n\n\n\n\n\n87\n\n\nOnyu K, Yeetsorn R, Gostick JT, Chitvuttichot S. Performance Analysis and Monitoring of Vanadium Redox Flow Battery via Polarization curves. Applied Sciences. 12(22), 11702 (2022)\nLinks: Publisher Site\n\n\n\n\n86\n\n\nMisaghian N, Sadeghi MA, Roberts E, Gostick JT*. Pore network modeling of zinc-air cathodes incorporating the impact of the triple-phase boundary. Journal of the Electrochemical Society. 169(10), 100549 (2022)\nLinks: Publisher Site\n\n\n\n\n85\n\n\nWen G, Ren B, Wang X, Luo D, Dou H, Bai Z, Gostick JT, Yu A, Chen Z, Continuous CO2 electrolysis using a CO2 exsolution-induced flow cell. Nature Energy. 7(10), 978–988 (2022)\nLinks: Publisher Site\n\n\n\n\n84\n\n\nSánchez-Ramos A, Gostick JT, García-Salaberri PA. Modeling the Effect of Low Pt loading Cathode Catalyst Layer in Polymer Electrolyte Fuel Cells. Part II: Parametric Analysis. Journal of the Electrochemical Society. 169(7), 074503 (2022)\nLinks: Publisher Site\n\n\n\n\n83\n\n\nOnyu K, Yeetsorn R, Gostick JT, Fabrication of Bipolar Plates from Thermoplastic Elastomer Composites for Vanadium Redox Flow Battery. Polymers. 14(11), 2143 (2022)\nLinks: Publisher Site\n\n\n\n\n82\n\n\nMcKague MG, Fathiannasab H, Agnaou M, Sadeghi MA, Gostick JT*, Extending pore network models to include electrical double layer effects in micropores for studying capacitive deionization. Desalination. 535, 115784 (2022).\nLinks: Publisher Site\n\n\n\n\n81\n\n\nvan der Heijden M, van Gorp R, Sadeghi MA, Gostick JT, and Forner-Cuenca A, Assessing the versatility and robustness of pore network modelling to simulate redox flow battery electrode performance. Journal of the Electrochemical Society. 169(4), 040505 (2022)\nLinks: Publisher Site\n\n\n\n\n80\n\n\nKabernick D, Gostick JT, Ward V, Kinetic characterization and modelling of sequentially entrapped enzymes in 3D-printed PMMA microfluidic reactors for the synthesis of amorphadiene via the isopentenol utilization pathway. Biotechnology & Bioengineering. 119(5), 1239-1251 (2022)\nLinks: Publisher Site\n\n\n\n\n79\n\n\nChadwick EA, Hammen LH, Schulz VP, Bazylak A, Ioannidis MA, Gostick JT*. Incorporating the effect of gravity into image-based drainage simulations on volumetric images of porous media. Water Resources Research. 58(3), e2021WR031509 (2022)\nLinks: Publisher Site | Post Print\n\n\n\n\n78\n\n\nMisaghian N, Agnaou M, Sadeghi MA, Fathiannasab H, Hadji I, Roberts EPL, Gostick JT*, Prediction of diffusional conductance in extracted pore network models using convolutional neural networks. Computers & Geosciences. 162(May), 105086 (2022)\nLinks: Publisher Site | Post Print\n\n\n\n\n77\n\n\nGostick JT*, Misaghian N, Yang J, Boek ES. Simulating volume-controlled invasion of a non-wetting fluid in volumetric images using basic image processing tools. Computers and the Geosciences. 158(1), 104978 (2022)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n\n\n\n\n\n\n\n\n76\n\n\nSánchez-Ramos A, Gostick JT, García-Salaberri PA. Modeling the Effect of Low Pt loading Cathode Catalyst Layer in Polymer Electrolyte Fuel Cells. Part I: Model Formulation and Validation. Journal of the Electrochemical Society. 168(12), 124514 (2021)\nLinks: Publisher Site\n\n\n\n\n75\n\n\nKhan ZA, Agnaou M, Sadeghi MA, Elkamel A, Gostick JT*. Pore network modelling of galvanostatic discharge behaviour of lithium-ion battery cathodes. Journal of the Electrochemical Society. 168(7), 070534 (2021)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n74\n\n\nJung S, Sabharwal M, Jarauta A, Wei F, Gostick J, Gingras M, Secanell M. Estimation of Relative Transport Properties in Porous Transport Layers Using Pore-Scale and Pore-Network Simulations. Journal of The Electrochemical Society. 168(6), 064501 (2021)\nLinks: Publisher Site\n\n\n\n\n73\n\n\nPourali M, Esfahani IA, Sadeghi MA, Kim KC, Gostick JT. Simulation of methane steam reforming in a catalytic micro-reactor using a combined analytical approach and response surface methodology. International Journal of Hydrogen Energy. 46(44), 22763-22776 (2021)\nLinks: Publisher Site\n\n\n\n\n72\n\n\nKim YW, Asset T, Wei F, Atanassov P, Secanell M, Barralet JE, and Gostick JT*. Fabrication of PGM-free Catalyst Layer with Enhanced Mass Transport Characteristics via Electrospraying Technique. Materials Today Energy. 20(June), 100641 (2021)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n71\n\n\nYadav S, Kok MDR, Forner-Cuenca A, Tenny KM, Chiang YM, Brushett FR, Jervis R, Shearing PR, Brett D, Roberts EPL, Gostick JT*. Fabrication of high surface area ribbon electrodes for use in redox flow batteries via coaxial electrospinning. Journal of Energy Storage. 33(1), 102079 (2021)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n70\n\n\nWen Y, Kok MDR, Tafoya JPV, Sobrido ABJ, Bell E, Gostick JT, Herou S, Schlee P, Titirici MM, Brett DLJ, Shearing PR, Jervis R. Electrospinning as a route to advanced materials for electrochemical devices: a review. Journal of Energy Chemistry. 59(8), 492-529 (2021)\nLinks: Publisher Site\n\n\n\n\n\n\n\n\n\n\n\n\n69\n\n\nSy S, Jiang G, Zhang J, Zarrin H, Cumberland T, Abureden S, Bell E, Gostick JT, Yu A, and Chen A. A Near-Isotropic Proton-Conducting Porous Graphene Oxide Membrane. ACS Nano. 14(11), 14947–14959 (2020).\nLinks: Publisher Site\n\n\n\n\n68\n\n\nKhan, ZA, Elkamel A, Gostick JT*, Efficient extraction of pore networks from massive tomograms via geometric domain decomposition. Advances in Water Resources. 145(Nov), 103734 (2020).\nLinks: Publisher Site | Author Postprint\n\n\n\n\n67\n\n\nTranter T, Boillat P, Mularczyk A, Manzi-Orezzoli V, Shearing P, Brett D, Eller J, Gostick JT, Forner-Cuenca A, Pore network modelling of capillary transport and relative diffusivity in gas diffusion layers with patterned wettability. Journal of the Electrochemical Society. 167(11), 114512 (2020).\nLinks: Publisher Site\n\n\n\n\n66\n\n\nWen G, Ren B, Park MG, Yang J, Dou H, Zhang Z, Deng Y-P, Bai Z, Yang L, Gostick JT, Botton GA, Hu Y, Chen Z, Ternary Sn‐Ti‐O Electrocatalyst Boosts the Stability and Energy Efficiency of CO2 Reduction. Angewandte Chemie. 59(31), 12860-12867 (2020)\nLinks: Publisher Site\n\n\n\n\n65\n\n\nWen G, Sarish R, Tranter TG, Ghosh D, Chen Z, Gostick JT*, Pope MA, Insights into multiphase reactions during self-discharge of Li-S batteries. Chemistry of Materials. 32(11), 4518–4526 (2020)\nLinks: Publisher Site | Author Postprint |  Supplemental Information\n\n\n\n\n64\n\n\nAmini K, Gostick JT, Pritzker MD, Metal and Metal Oxide Electrocatalysts for Redox Flow Batteries. Advanced Functional Materials. 30(23), 1910564 (2020)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n63\n\n\nAgnaou M, Sadeghi MA, Tranter TG, Gostick, JT*. Modeling Transport of Charged Species in Pore Networks: Solution of the Nernst-Planck Equations Coupled with Fluid Flow and Charge Conservation Equations. Computers and Geosciences. 140(6), 104505 (2020)\nLinks: Publisher Site | Arxiv Preprint\n\n\n\n\n62\n\n\nKhan ZA, García-Salaberri PA, Heenan T, Jervis R, Shearing P, Brett D, Elkamel A, Gostick JT*, Probing the structure-performance relationship of lithium-ion battery cathodes using pore-networks extracted from three-phase tomograms. Journal of the Electrochemical Society. 167(4), 040528 (2020)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n61\n\n\nSadeghnejad S, Gostick JT, Multi-scale reconstruction of vuggy carbonates by pore network modeling and image-based technique. SPE Journal. 25(1), 198902-PA (2020)\nLinks: Publisher Site\n\n\n\n\n60\n\n\nSadeghi, MA, Agnaou M, Barralet JE, Gostick JT*, Dispersion modeling in pore networks: A comparison of common pore-scale models and alternative approaches. Journal of Contaminant Hydrology. 228(1), 103578 (2020)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n\n\n\n\n\n\n\n\n59\n\n\nZhang Z, Sadeghi MA, Jervis R, Ye S, Gostick JT, Barralet JE, Merle G, Tailoring Carbon Nanotube Microsphere Architectures with Controlled Porosity. Advanced Functional Materials. 29(42), 1903983, (2019).\nLinks: Publisher Site\n\n\n\n\n58\n\n\nZhang Z, Sadeghi MA, Brodusch N, Gauvin R, Ye S, Gostick, JT, Merle G, Barralet JE, Selective exposure of platinum catalyst embedded in protective oxide layer on conductive titanium carbide support. Materials Today - Energy. 13(5), 353-361, (2019)\nLinks: Publisher Site\n\n\n\n\n57\n\n\nTranter TG, Kok MDR, Lam M, Gostick JT*, PyTrax: A vectorized and parallelized random walk implementation for calculating the tortuosity of volumetric images. SoftwareX. 10(July-Dec), 100277 (2019)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n56\n\n\nSadeghi MA, Agnaou M, Kok M, Aghighi M, Merle G, Barralet JE, Gostick JT*, The interplay between microstructure, transport properties, and kinetics in flow battery electrodes: a pore network modeling study. Journal of the Electrochemical Society, 66(10), A2121-A2130 (2019)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n55\n\n\nGostick JT*, Khan ZA, Tranter TG, Kok MDR, Agnaou M, Sadeghi MA, and Jervis R, PoreSpy: A Python Toolkit for Quantitative Analysis of Porous Media Images. The Journal of Open Source Software, 4(37), 1296 (2019)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n54\n\n\nTranter TG, Tam M, and Gostick JT*, The effect of cracks on the in-plane electrical conductivity of PEFC catalyst layers. Electroanalysis. 31(4), 619-623 (2019)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n53\n\n\nKok MDR, Jervis R, Tranter TG, Sadeghi MA, Brett DJ, Shearing PR, and Gostick JT*, Mass Transfer in Fibrous Media with Varying Anisotropy for Flow Battery Electrodes: Direct Numerical Simulations with 3D X-ray Computed Tomography. Chemical Engineering Science. 196, 104-115 (2019)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n52\n\n\nKhan ZA, Tranter TG, Agnaou M, Elkamel A, and Gostick JT*, Dual network extraction algorithm to investigate multiple transport processes in porous materials: Image-based modeling of pore and grain-scale processes. Computers and Chemical Engineering. 123(6), 64-77 (2019)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n51\n\n\nGarcia-Salaberri, PA, Zenyuk I, Hwang G, Vera M, Weber AZ, Gostick JT, Implications of Inherent Inhomogeneities in Thin Carbon Fiber-Based Gas-Diffusion Layers: A Comparative Modeling Study. Electrochimica Acta. 295, 861-874 (2019)\nLinks: Publisher Site\n\n\n\n\n50\n\n\nKim YW, Gostick JT*, Measuring Effective Diffusivity in Porous Media with a Gasket-Free, Radial Arrangement. International Journal of Heat and Mass Transfer. 129(2), 1023-1030 (2019)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n\n\n\n\n\n\n\n\n49\n\n\nJervis R, Kok MDR, Montagut J, Gostick JT, Brett DJL, Shearing PR, X-ray Nano Computed Tomography of Electrospun Fibrous Mats as Flow Battery Electrodes. Energy Technology. 6(12), 2488-2500 (2018).\nLinks: Publisher Site\n\n\n\n\n48\n\n\nGlembockyte V, Frenette M, Mottillo C, Durantini A, Gostick JT, Strukil V, Friscic T, Cosa G, Highly Photostable and Fluorescent Microporous Solids Prepared via Solid-state Entrapment of BODIPY Dyes in a Nascent Metal-Organic Framework. Journal of the American Chemical Society. 140(49), 16882-16887 (2018)\nLinks: Publisher Site\n\n\n\n\n47\n\n\nFraser A, Zhang Z, Merle G, Gbureck U, Ye S, Gostick JT, Barralet JE, Composite Carbon Nanotube Microsphere Coatings for Use as Electrode Supports. Advanced Functional Materials. 28(46), 1803713 (2018)\nLinks: Publisher Site\n\n\n\n\n46\n\n\nWen G, Lee DU, Ren B, Hassan FM, Jiang J, Cano ZP, Gostick JT, Croiset E, Bai Z, Yang L, Chen Z, Orbital Interactions in Bi‐Sn Bimetallic Electrocatalysts for Highly Selective Electrochemical CO2 Reduction toward Formate Production. Advanced Energy Materials. 8(31), 1802427 (2018).\nLinks: Publisher Site\n\n\n\n\n45\n\n\nFraser A, Zhang Z, Merle G, Gostick JG, Barralet JE, Powder Conductivity Assessment Using a Disposable 3D Printed Device. Electroanalysis. 30(9), 1897-1901 (2018).\nLinks: Publisher Site\n\n\n\n\n44\n\n\nJervis, R, Meyer Q, Kok MDR, Brown L, Iacoviello F, Brett D, Neville T, Shearing P, and Gostick JT, In situ Compression and X-ray Computed Tomography of Flow Battery Electrodes. Journal of Energy Chemistry. 27(5), 1353-1361 (2018).\nLinks: Publisher Site\n\n\n\n\n43\n\n\nGarcia-Salaberri PA, Zenyuk I, Shum A, Hwang G, Vera M, Weber AZ, and Gostick JT., Analysis of representative elementary volume and through-plane regional characteristics of carbon-fiber papers: diffusivity, permeability and electrical/thermal conductivity. International Journal of Heat and Mass Transfer. 127(B), 687-703 (2018).\nLinks: Publisher Site\n\n\n\n\n42\n\n\nSabharwal M, Gostick JT, Secanell M, Virtual Liquid Water Intrusion in Fuel Cell Gas Diffusion Media. Journal of the Electrochemical Society. 165(7), F553-F563 (2018)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n41\n\n\nKok MDR, Jervis R, Shearing PR, Brett D, Gostick JT*, Insights into the Effect of Structural Heterogeneity in Carbonized Electrospun Fibrous Mats for Flow Battery Electrodes by X-Ray Tomography. Small. 14(9), 1703616 (2018)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n40\n\n\nTranter TF, Burns A, Gale W, Gostick JT*, Pore network modeling of capillary hysteresis in neutrally wettable fibrous media. Transport in Porous Media. 121(3), 597–620 (2018)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n39\n\n\nMoosavi SM, Niffeler M, Gostick JT, Haussener S, Transport characteristics of saturated gas diffusion layers treated with hydrophobic coatings. Chemical Engineering Science. 172(2), 503-514 (2018)\nLinks: Publisher Site\n\n\n\n\n\n\n\n\n\n\n\n\n38\n\n\nAghighi, M., J. Gostick*, Pore network modeling of phase change in PEM fuel cell fibrous cathode. Journal of Applied Electrochemistry. 47(12), 1323–1338 (2017)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n37\n\n\nSadeghi, M. A., Aghighi, M., Barralet, J. & Gostick, J. T.*, Pore network modeling of reaction-diffusion in hierarchical porous particles: The effects of microstructure. Chemical Engineering Journal 330, 1002–1011 (2017)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n36\n\n\nLiu, S, MDR Kok, YW Kim, JL Baron, FR Brushett, JT Gostick*, Evaluation of Electrospun Fibrous Mats Targeted for Use as Flow Battery Electrodes. J. Electrochem. Soc. 164, A2038–A2048 (2017)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n35\n\n\nGostick, J. T. Versatile and efficient pore network extraction method using marker-based watershed segmentation. Phys. Rev. E 96, 023307 (2017)\nLinks: Publisher Site | Author Postprint | Source Code\n\n\n\n\n34\n\n\nHinebaugh, J., Gostick, J.T., Bazylak, A. Stochastic modeling of polymer electrolyte membrane fuel cell gas diffusion layers – Part 2: A comprehensive substrate model with pore size distribution and heterogeneity effects. International Journal of Hydrogen Energy 42, 15872–15886 (2017)\nLinks: Publisher Site\n\n\n\n\n33\n\n\nTranter, T.G., P. Stogornyuk, J.T. Gostick, A.D. Burns, W.F. Gale, A method for measuring relative in-plane diffusivity of thin and partially saturated porous media: An application to fuel cell gas diffusion layers. International Journal of Heat and Mass Transfer. 110(July), 132–141 (2017)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n\n\n\n\n\n\n\n\n32\n\n\nLopes, J., F.-X. Colson, S. Ye, J.T. Gostick, J.E. Barralet, G. Merle, Graphene modified nanosized Ag electrocomposites. Materials Research Bulletin. 89(May), 42–50 (2016)\nLinks: Publisher Site\n\n\n\n\n31\n\n\nRashapov, R., and J. Gostick*, In-plane effective diffusivity in PEMFC gas diffusion layers. Transport in Porous Media. 115(3), 411-433 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n30\n\n\nZhang Z., J.H. Lopes, S. Ye, J. Gostick, J.E. Barralet, and G. Merle, Electrically Bloomed Platinum Nanoflowers on Exfoliated Graphene: An Efficient Alcohol Oxidation Catalyst. Journal of the Electrochemical Society. 163(10), D615-D621 (2016)\nLinks: Publisher Site\n\n\n\n\n29\n\n\nTranter, T., J. Gostick, A. Burns, and W. Gale. Pore Network Modeling of Compressed Fuel Cell Components with OpenPNM, Fuel Cells. 16(4), p504–515 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n28\n\n\nGostick, J.*, M. Aghighi, J. Hinebaugh, T. Tranter, M.A. Hoeh, H. Day, B. Spellacy, M. Sharqawy, A. Bazylak, A. Burns, W. Lehnert and A. Putz. OpenPNM: A Pore Network Modeling Package. Computing in Science & Engineering. 18(4), p60-74 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n27\n\n\nKok, M., A. Khalifa and J. Gostick*. Multiphysics simulation of the flow battery cathode: cell architecture and electrode optimization. Journal of the Electrochemical Society. 163 (7), A1408-A1419 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n26\n\n\nAghighi M.A., M.A. Hoeh, W. Lehnert, G. Merle, and J. Gostick*, Simulation of a Full Fuel Cell Membrane Electrode Assembly Using Pore Network Modeling. Journal of the Electrochemical Society. 163(4), p.F384-392 (2016)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n\n\n\n\n\n\n\n\n25\n\n\nSchalenbach, M., M.A. Hoeh, J. Gostick, W. Lueke and D. Stolten. Gas Permeation through Nafion®. Part 2: Resistor Network Model. Journal of Physical Chemistry C. 119(45), p.25156–25169 (2015)\nLinks: Publisher Site\n\n\n\n\n24\n\n\nQuesnel C., R. Cao, J. Lehr, A. Kietzig, A. Weber and J Gostick*. Dynamic Percolation Behavior in Double Layered Porous Materials. Journal of Physical Chemistry C. 119(40), p.22934–22944 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n23\n\n\nGostick, J. and A. Weber, Resistor-Network Modeling of Ionic Conduction in Polymer Electrolytes. Electrochimica Acta. 179(October), p.137-145 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n22\n\n\nLopez, J., G. Merle, S. Ye , J. Gostick, J. Barralet, Electrocatalytic oxygen reduction performance of silver nanoparticle decorated electrochemically exfoliated graphene. Langmuir. 31(35), p.9718-9727 (2015)\nLinks: Publisher Site\n\n\n\n\n21\n\n\nGarcía-Salaberri, P.A., J. Gostick, G. Hwang, A.Z. Weber and M. Vera. Effective diffusivity in partially-saturated carbon-fiber gas diffusion layers: Effect of local saturation and application to macroscopic continuum models. Journal of Power Sources. 296: p. 440–453 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n20\n\n\nGarcía-Salaberri, P.A., G. Hwang, M. Vera, A.Z. Weber and J. Gostick*. Effective diffusivity in partially-saturated carbon-fiber gas diffusion layers: Effect of through-plane saturation distribution. International Journal of Heat and Mass Transfer. 86: p. 319–333 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n19\n\n\nRashapov, R., J. Unno and J. Gostick*, Characterization of PEMFC gas diffusion layer porosity. Journal of the Electrochemical Society. 162(1): p. F603-F612 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n18\n\n\nRashapov, R., F. Imami and J. Gostick*, Experimental method of in-plane effective diffusion coefficient measurements of porous media. International Journal of Heat and Mass Transfer. 85: p. 367-374 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n17\n\n\nKok, M.R.D., J. Gostick*, Transport properties of electrospun fibrous membranes with controlled anisotropy. Journal of Membrane Science. 1(473): p. 237-244 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n\n\n\n\n\n\n\n\n16\n\n\nMorris, D., S. Liu, D. Villegas and J. Gostick*, Electrical conductivity of fuel cell catalyst layers under controlled relative humidity. ACS Applied Materials & Interfaces. 6(21): p. 18609–18618 (2014)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n15\n\n\nGostick, J.*, Random pore network modeling of fibrous PEMFC gas diffusion media using Voronoi and Delaunay tessellations. Journal of the Electrochemical Society. 160(8): p. F731-F743 (2013)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n14\n\n\nMorris, D and J. Gostick*, Determination of the in-plane components of the electrical conductivity tensor in PEM fuel cell gas diffusion layers. Electrochimica Acta. 85(1): p. 665-673 (2012)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n13\n\n\nWeber, A.Z., M.M. Mench, J.P. Meyers, P.N. Ross, J. Gostick, and Q. Liu, Redox flow batteries, a review. Journal of Applied Electrochemistry. 41(10): p. 1137-1164 (2011)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n12\n\n\nGostick, J.* and M.A. Ioannidis, Comment on “Effect of gas diffusion layer properties on the time of breakthrough” by Shahraeeni and Hoorfar. Journal of Power Sources. 196(22): p. 9844 (2011).\nLinks: Publisher Site\n\n\n\n\n11\n\n\nHwang, G.S., M. Kaviany, J. Gostick, B. Kientiz, A.Z. Weber, and M.H. Kim, Role of water states on water uptake and proton transport in Nafion using molecular simulations and bimodal network. Polymer. 52(12): p. 2584-2593 (2011)\nLinks: Publisher Site\n\n\n\n\n10\n\n\nBunmark, N., S. Limtrakul, M.W. Fowler, T. Vatanatham, and J. Gostick, Assisted water management in a PEMFC with a modified flow field and its effect on performance. International Journal of Hydrogen Energy. 35(13): p. 6887-6896 (2010)\nLinks: Publisher Site\n\n\n\n\n9\n\n\nGostick, J., M.A. Ioannidis, M.D. Pritzker, and M.W. Fowler, Impact of liquid water on reactant mass transfer in PEM fuel cell electrodes. Journal of the Electrochemical Society. 57(4): p. B563-B571 (2010)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, Wettability and capillary behavior of fibrous gas diffusion media for polymer electrolyte membrane fuel cells. Journal of Power Sources. 194: p. 433-444 (2009)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n7\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, On the role of the microporous layer in PEMFC operation. Electrochemistry Communications. 11(3): p. 576-579 (2009)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n6\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, Direct measurement of the capillary pressure characteristics of water-air-gas diffusion layer systems for PEM fuel cells. Electrochemistry Communications. 10: p. 1520-1523 (2008)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n5\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, Pore network modeling of fibrous gas diffusion layers for polymer electrolyte membrane fuel cells. Journal of Power Sources. 173: p. 277-290 (2007)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n4\n\n\nGostick, J., M.W. Fowler, M.D. Pritzker, M.A. Ioannidis, and L.M. Behra, In-Plane and through-plane gas permeability of carbon fiber electrode backing layers. Journal of Power Sources. 162 (1): p. 228-238 (2006)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n3\n\n\nGostick, J., M.W. Fowler, M.A. Ioannidis, M.D. Pritzker, Y.M. Volfkovich, and A. Sakars, Capillary pressure and hydrophilic porosity in gas diffusion layers for polymer electrolyte fuel cells. Journal of Power Sources. 156(2): p. 375-387 (2006)\nLinks: Publisher Site\n\n\n\n\n2\n\n\nGostick, J., M. Pritzker, A. Lohi, and H.D. Doan, Mass transfer variation within a packed bed and its relation to liquid distribution. Chemical Engineering Journal. 100(1-3): p. 33-41 (2004)\nLinks: Publisher Site\n\n\n\n\n1\n\n\nGostick, J., H.D. Doan, A. Lohi, and M.D. Pritzker, Investigation of Local Mass Transfer in a Packed Bed of Pall Rings Using a Limiting Current Technique. Industrial and Engineering Chemistry Research. 42(15): p. 3626-3634 (2003)\nLinks: Publisher Site\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\nGostick JT, Kok MDR, Jervis R. Electrospun Fibrous Mats, in: Album of Porous Media. Médici, E.F., Otero, A.D. Editors. 2023, Springer.\nLinks: Publisher Site\n\n\n\n\n5\n\n\nSecannel M, Garcia-Salaberri PA, Gostick JT. Porous Electrodes for PEM Fuel Cells and Electrolyzers, in Encyclopedia of Energy Storage. M. Guarnieri, Editor. 2021. Elsevier: Amsterdam.\nLinks: Publisher Site\n\n\n\n\n4\n\n\nAmini K, Sadeghi MA, Pritzker MD and Gostick JT*, Porous Electrodes for Redox Flow Batteries, in Encyclopedia of Energy Storage. M. Guarnieri, Editor. 2021. Elsevier: Amsterdam.\nLinks: Publisher Site\n\n\n\n\n3\n\n\nGostick JT. Strain, Force, and Mass, in Experimental Methods and Instrumentation for Chemical Engineers. G. Patience, Editor. 2016. Elsevier: Amsterdam.\n\n\n\n\n2\n\n\nGostick JT, Ioannidis MA, Pritzker MD, and Fowler MW. Porosimetry and Characterization of the Capillary Properties of Gas Diffusion Media, in Handbook of PEM Fuel Cell Durability, H. Wang, X.-Z. Yuan, and H. Li, Editors. 2011, Taylor Francis: Baton Rouge.\n\n\n\n\n1\n\n\nGostick JT, Ioannidis MA, Pritzker MD, Fowler MW. Characterization of the Capillary Properties of Gas Diffusion Media, in Modern Aspects of Electrochemistry, C.Y. Wang and U. Pasaogullari, Editors. 2010, Springer: Berlin."
  },
  {
    "objectID": "publications.html#pre-prints",
    "href": "publications.html#pre-prints",
    "title": "Publications",
    "section": "",
    "text": "None at the moment"
  },
  {
    "objectID": "publications.html#in-press",
    "href": "publications.html#in-press",
    "title": "Publications",
    "section": "",
    "text": "02\n\n\nMaier L, Pauly L, Gostick JT, Gresser GT, Nieken U. Spontaneous imbibition in thin anisotropic fibrous media: Experiments and numerical modeling. Textile Research Journal\nLinks: Publisher Site\n\n\n\n\n01\n\n\nYu H, Pritzker MD, Gostick JT. Improving Performance of Hybrid Zn-Ce Redox Flow Battery by Controlling Ion Crossover and Use of Mixed Acid Positive Electrolyte. Journal of Applied Electrochemistry.\nLinks: Preprint on ResearchSquare | Publisher Site (Open Access)"
  },
  {
    "objectID": "publications.html#section",
    "href": "publications.html#section",
    "title": "Publications",
    "section": "",
    "text": "104\n\n\nLee KM, Alizadeh M, Suzuki T, Tsushima S, Roberts EPL, Gostick JT. Multiphysics Simulation of Multi-layered Fibrous Electrodes for the Vanadium Redox Flow Battery. Journal of the Electrochemical Society. 171(9) 090534. (2024)\nLinks: Publisher Site (Open access PDF)\n\n\n\n\n103\n\n\nRahman Y, Gostick JT, Ioannidis MA. Nanoparticle Transport in Partially Saturated Porous Media: Attachment at Fluid Interfaces. Advances in Water Resources. 193(11), 104816 (2024)\nLinks: Publisher Site\n\n\n\n\n102\n\n\nGostick JT, Misaghian N, Irannezhad A, Zhao B. A computationally efficient queue-based algorithm for simulating volume-controlled drainage under the influence of gravity on volumetric images. Advances in Water Resources. 193(11) 104799 (2024)\nLinks: Preprint on ArXiv | Publisher Site (Open Access)\n\n\n\n\n101\n\n\nAlizadeh, M, Gostick JT, Suzuki T, Tsushima S. Topological optimization for tailored designs of advection-diffusion-reaction porous reactors based on pore scale modeling and simulation. Computers & Structures. 301(9), 107452 (2024)\nLinks: Publisher Site | Preprint on ChemarXiv\n\n\n\n\n100\n\n\nBell E, Morris DRP, Sadeghi MA, Gostick JT. BEaTmap: Simplified rigorous BET analysis of isothermal adsorption data. Journal of Open Research Software. 12(1), 5-12 (2024)\nLinks: Publisher Site (Open Access)\n\n\n\n\n99\n\n\nLy S, Sadeghi MA, Misaghian N, Fathiannasab H, Gostick JT. Rapid prediction of particle-scale state-of-lithiation in Li-ion battery microstructures using convolutional neural networks. Applied Energy. 360, 122803 (2024)\nLinks: Publisher Site (Open Access)\n\n\n\n\n98\n\n\nKhan ZA, Gostick JT. Enhancing Pore Network Extraction Performance via Seed-Based Pore Region Growing Segmentation. Advances in Water Resources. 183(1), 104591 (2024)\nLinks: Publisher Site\n\n\n\n\n97\n\n\nBurton N, Abdala A, Zarshenas K, Ghanbari S, Somvanshi C, Gostick JT, Pope MA. Unleashing the Potential of Scalable, High-Water Vapour Permeance Graphene Oxide Membranes using Electrospun Supports. Journal of Membrane Science. 690(1), 122142 (2024)\nLinks: Publisher Site\n\n\n\n\n96\n\n\nSadeghi MA, Khan ZA, Agnaou M, Hu L, Litster S, Kongkanand A, Padgett E, Muller DA, Friscic T, Gostick JT*. Predicting PEMFC performance from a volumetric image of catalyst layer structure using pore network modeling. Applied Energy. 353(A), 122004 (2024)\nLinks: Publisher Site"
  },
  {
    "objectID": "publications.html#section-1",
    "href": "publications.html#section-1",
    "title": "Publications",
    "section": "",
    "text": "95\n\n\nOlbrich W, Kadyk T, Sauter U, Eikerling M, Gostick JT. Structure and Conductivity of Ionomer in PEM Fuel Cell Catalyst Layers: A Model-Based Analysis. Scientific Reports. 13(1), 14127 (2023)\nLinks: Publisher Site, with Open Access PDF\n\n\n\n\n94\n\n\nRodriguez de Castro A, Agnaou M, Gostick JT*. Predicting Shear-Thinning Fluid Flows in Porous Media Using Pore Network Modeling: Simulations and Experimental Validation. Transport in Porous Media. 149, 453–478 (2023)\nLinks: Publisher Site\n\n\n\n\n93\n\n\nMisaghian N, Sadeghi MA, Lee KY, Roberts EPL, and Gostick JT*. Utilizing Pore Network Modeling for Performance Analysis of Multi-Layer Electrodes in Vanadium Redox Flow Batteries. Journal of The Electrochemical Society, 170(7) 070520 (2023).\nLinks: Publisher Site\n\n\n\n\n92\n\n\nLee KM, Pahlevaninezhad M, Smith V, Abouali S, Orfino FP, Kjeang E, Pope M, Roberts E, Gostick JT*. Improvement of vanadium redox flow battery performance obtained by compression and laser perforation of electrospun electrodes. Materials Today Energy. 35, 101333 (2023).\nLinks: Publisher Site\n\n\n\n\n91\n\n\nGhanbari S, Golmohammadi M, Gostick JT*. Computational Analysis of Citric Acid Pertraction in Emulsion Liquid Membranes. Canadian Journal of Chemical Engineering. 101(6), 3607-3623 (2023).\nLinks: Publisher Site\n\n\n\n\n90\n\n\nYu H, Pritzker M, Gostick JT. Use of Mixed Methanesulfonic Acid/Sulfuric Acid as Positive Supporting Electrolyte in Zn-Ce Redox Flow Battery. Journal of the Electrochemical Society. 170(2), 020536 (2023).\nLinks: Publisher Site\n\n\n\n\n89\n\n\nKim YW, Urbina LP, Asset T, Secanell M, Atanassov P, Barralet J, Gostick JT. Insights on Designing non-PGM Catalyst Layers at Low Humidity. Journal of Power Sources. 66(4), 232741 (2023).\nLinks: Publisher Site\n\n\n\n\n88\n\n\nvan Gorp R, van der Heijden M, Sadeghi MA, Gostick JT, and Forner-Cuenca A. Bottom-up design of porous electrode by combining a genetic algorithm and a pore network model. Chemical Engineering Journal. Volume 455(1), 139947 (2023)\nLinks: Publisher Site"
  },
  {
    "objectID": "publications.html#section-2",
    "href": "publications.html#section-2",
    "title": "Publications",
    "section": "",
    "text": "87\n\n\nOnyu K, Yeetsorn R, Gostick JT, Chitvuttichot S. Performance Analysis and Monitoring of Vanadium Redox Flow Battery via Polarization curves. Applied Sciences. 12(22), 11702 (2022)\nLinks: Publisher Site\n\n\n\n\n86\n\n\nMisaghian N, Sadeghi MA, Roberts E, Gostick JT*. Pore network modeling of zinc-air cathodes incorporating the impact of the triple-phase boundary. Journal of the Electrochemical Society. 169(10), 100549 (2022)\nLinks: Publisher Site\n\n\n\n\n85\n\n\nWen G, Ren B, Wang X, Luo D, Dou H, Bai Z, Gostick JT, Yu A, Chen Z, Continuous CO2 electrolysis using a CO2 exsolution-induced flow cell. Nature Energy. 7(10), 978–988 (2022)\nLinks: Publisher Site\n\n\n\n\n84\n\n\nSánchez-Ramos A, Gostick JT, García-Salaberri PA. Modeling the Effect of Low Pt loading Cathode Catalyst Layer in Polymer Electrolyte Fuel Cells. Part II: Parametric Analysis. Journal of the Electrochemical Society. 169(7), 074503 (2022)\nLinks: Publisher Site\n\n\n\n\n83\n\n\nOnyu K, Yeetsorn R, Gostick JT, Fabrication of Bipolar Plates from Thermoplastic Elastomer Composites for Vanadium Redox Flow Battery. Polymers. 14(11), 2143 (2022)\nLinks: Publisher Site\n\n\n\n\n82\n\n\nMcKague MG, Fathiannasab H, Agnaou M, Sadeghi MA, Gostick JT*, Extending pore network models to include electrical double layer effects in micropores for studying capacitive deionization. Desalination. 535, 115784 (2022).\nLinks: Publisher Site\n\n\n\n\n81\n\n\nvan der Heijden M, van Gorp R, Sadeghi MA, Gostick JT, and Forner-Cuenca A, Assessing the versatility and robustness of pore network modelling to simulate redox flow battery electrode performance. Journal of the Electrochemical Society. 169(4), 040505 (2022)\nLinks: Publisher Site\n\n\n\n\n80\n\n\nKabernick D, Gostick JT, Ward V, Kinetic characterization and modelling of sequentially entrapped enzymes in 3D-printed PMMA microfluidic reactors for the synthesis of amorphadiene via the isopentenol utilization pathway. Biotechnology & Bioengineering. 119(5), 1239-1251 (2022)\nLinks: Publisher Site\n\n\n\n\n79\n\n\nChadwick EA, Hammen LH, Schulz VP, Bazylak A, Ioannidis MA, Gostick JT*. Incorporating the effect of gravity into image-based drainage simulations on volumetric images of porous media. Water Resources Research. 58(3), e2021WR031509 (2022)\nLinks: Publisher Site | Post Print\n\n\n\n\n78\n\n\nMisaghian N, Agnaou M, Sadeghi MA, Fathiannasab H, Hadji I, Roberts EPL, Gostick JT*, Prediction of diffusional conductance in extracted pore network models using convolutional neural networks. Computers & Geosciences. 162(May), 105086 (2022)\nLinks: Publisher Site | Post Print\n\n\n\n\n77\n\n\nGostick JT*, Misaghian N, Yang J, Boek ES. Simulating volume-controlled invasion of a non-wetting fluid in volumetric images using basic image processing tools. Computers and the Geosciences. 158(1), 104978 (2022)\nLinks: Publisher Site | Author Postprint"
  },
  {
    "objectID": "publications.html#section-3",
    "href": "publications.html#section-3",
    "title": "Publications",
    "section": "",
    "text": "76\n\n\nSánchez-Ramos A, Gostick JT, García-Salaberri PA. Modeling the Effect of Low Pt loading Cathode Catalyst Layer in Polymer Electrolyte Fuel Cells. Part I: Model Formulation and Validation. Journal of the Electrochemical Society. 168(12), 124514 (2021)\nLinks: Publisher Site\n\n\n\n\n75\n\n\nKhan ZA, Agnaou M, Sadeghi MA, Elkamel A, Gostick JT*. Pore network modelling of galvanostatic discharge behaviour of lithium-ion battery cathodes. Journal of the Electrochemical Society. 168(7), 070534 (2021)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n74\n\n\nJung S, Sabharwal M, Jarauta A, Wei F, Gostick J, Gingras M, Secanell M. Estimation of Relative Transport Properties in Porous Transport Layers Using Pore-Scale and Pore-Network Simulations. Journal of The Electrochemical Society. 168(6), 064501 (2021)\nLinks: Publisher Site\n\n\n\n\n73\n\n\nPourali M, Esfahani IA, Sadeghi MA, Kim KC, Gostick JT. Simulation of methane steam reforming in a catalytic micro-reactor using a combined analytical approach and response surface methodology. International Journal of Hydrogen Energy. 46(44), 22763-22776 (2021)\nLinks: Publisher Site\n\n\n\n\n72\n\n\nKim YW, Asset T, Wei F, Atanassov P, Secanell M, Barralet JE, and Gostick JT*. Fabrication of PGM-free Catalyst Layer with Enhanced Mass Transport Characteristics via Electrospraying Technique. Materials Today Energy. 20(June), 100641 (2021)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n71\n\n\nYadav S, Kok MDR, Forner-Cuenca A, Tenny KM, Chiang YM, Brushett FR, Jervis R, Shearing PR, Brett D, Roberts EPL, Gostick JT*. Fabrication of high surface area ribbon electrodes for use in redox flow batteries via coaxial electrospinning. Journal of Energy Storage. 33(1), 102079 (2021)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n70\n\n\nWen Y, Kok MDR, Tafoya JPV, Sobrido ABJ, Bell E, Gostick JT, Herou S, Schlee P, Titirici MM, Brett DLJ, Shearing PR, Jervis R. Electrospinning as a route to advanced materials for electrochemical devices: a review. Journal of Energy Chemistry. 59(8), 492-529 (2021)\nLinks: Publisher Site"
  },
  {
    "objectID": "publications.html#section-4",
    "href": "publications.html#section-4",
    "title": "Publications",
    "section": "",
    "text": "69\n\n\nSy S, Jiang G, Zhang J, Zarrin H, Cumberland T, Abureden S, Bell E, Gostick JT, Yu A, and Chen A. A Near-Isotropic Proton-Conducting Porous Graphene Oxide Membrane. ACS Nano. 14(11), 14947–14959 (2020).\nLinks: Publisher Site\n\n\n\n\n68\n\n\nKhan, ZA, Elkamel A, Gostick JT*, Efficient extraction of pore networks from massive tomograms via geometric domain decomposition. Advances in Water Resources. 145(Nov), 103734 (2020).\nLinks: Publisher Site | Author Postprint\n\n\n\n\n67\n\n\nTranter T, Boillat P, Mularczyk A, Manzi-Orezzoli V, Shearing P, Brett D, Eller J, Gostick JT, Forner-Cuenca A, Pore network modelling of capillary transport and relative diffusivity in gas diffusion layers with patterned wettability. Journal of the Electrochemical Society. 167(11), 114512 (2020).\nLinks: Publisher Site\n\n\n\n\n66\n\n\nWen G, Ren B, Park MG, Yang J, Dou H, Zhang Z, Deng Y-P, Bai Z, Yang L, Gostick JT, Botton GA, Hu Y, Chen Z, Ternary Sn‐Ti‐O Electrocatalyst Boosts the Stability and Energy Efficiency of CO2 Reduction. Angewandte Chemie. 59(31), 12860-12867 (2020)\nLinks: Publisher Site\n\n\n\n\n65\n\n\nWen G, Sarish R, Tranter TG, Ghosh D, Chen Z, Gostick JT*, Pope MA, Insights into multiphase reactions during self-discharge of Li-S batteries. Chemistry of Materials. 32(11), 4518–4526 (2020)\nLinks: Publisher Site | Author Postprint |  Supplemental Information\n\n\n\n\n64\n\n\nAmini K, Gostick JT, Pritzker MD, Metal and Metal Oxide Electrocatalysts for Redox Flow Batteries. Advanced Functional Materials. 30(23), 1910564 (2020)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n63\n\n\nAgnaou M, Sadeghi MA, Tranter TG, Gostick, JT*. Modeling Transport of Charged Species in Pore Networks: Solution of the Nernst-Planck Equations Coupled with Fluid Flow and Charge Conservation Equations. Computers and Geosciences. 140(6), 104505 (2020)\nLinks: Publisher Site | Arxiv Preprint\n\n\n\n\n62\n\n\nKhan ZA, García-Salaberri PA, Heenan T, Jervis R, Shearing P, Brett D, Elkamel A, Gostick JT*, Probing the structure-performance relationship of lithium-ion battery cathodes using pore-networks extracted from three-phase tomograms. Journal of the Electrochemical Society. 167(4), 040528 (2020)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n61\n\n\nSadeghnejad S, Gostick JT, Multi-scale reconstruction of vuggy carbonates by pore network modeling and image-based technique. SPE Journal. 25(1), 198902-PA (2020)\nLinks: Publisher Site\n\n\n\n\n60\n\n\nSadeghi, MA, Agnaou M, Barralet JE, Gostick JT*, Dispersion modeling in pore networks: A comparison of common pore-scale models and alternative approaches. Journal of Contaminant Hydrology. 228(1), 103578 (2020)\nLinks: Publisher Site | Author Postprint"
  },
  {
    "objectID": "publications.html#section-5",
    "href": "publications.html#section-5",
    "title": "Publications",
    "section": "",
    "text": "59\n\n\nZhang Z, Sadeghi MA, Jervis R, Ye S, Gostick JT, Barralet JE, Merle G, Tailoring Carbon Nanotube Microsphere Architectures with Controlled Porosity. Advanced Functional Materials. 29(42), 1903983, (2019).\nLinks: Publisher Site\n\n\n\n\n58\n\n\nZhang Z, Sadeghi MA, Brodusch N, Gauvin R, Ye S, Gostick, JT, Merle G, Barralet JE, Selective exposure of platinum catalyst embedded in protective oxide layer on conductive titanium carbide support. Materials Today - Energy. 13(5), 353-361, (2019)\nLinks: Publisher Site\n\n\n\n\n57\n\n\nTranter TG, Kok MDR, Lam M, Gostick JT*, PyTrax: A vectorized and parallelized random walk implementation for calculating the tortuosity of volumetric images. SoftwareX. 10(July-Dec), 100277 (2019)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n56\n\n\nSadeghi MA, Agnaou M, Kok M, Aghighi M, Merle G, Barralet JE, Gostick JT*, The interplay between microstructure, transport properties, and kinetics in flow battery electrodes: a pore network modeling study. Journal of the Electrochemical Society, 66(10), A2121-A2130 (2019)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n55\n\n\nGostick JT*, Khan ZA, Tranter TG, Kok MDR, Agnaou M, Sadeghi MA, and Jervis R, PoreSpy: A Python Toolkit for Quantitative Analysis of Porous Media Images. The Journal of Open Source Software, 4(37), 1296 (2019)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n54\n\n\nTranter TG, Tam M, and Gostick JT*, The effect of cracks on the in-plane electrical conductivity of PEFC catalyst layers. Electroanalysis. 31(4), 619-623 (2019)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n53\n\n\nKok MDR, Jervis R, Tranter TG, Sadeghi MA, Brett DJ, Shearing PR, and Gostick JT*, Mass Transfer in Fibrous Media with Varying Anisotropy for Flow Battery Electrodes: Direct Numerical Simulations with 3D X-ray Computed Tomography. Chemical Engineering Science. 196, 104-115 (2019)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n52\n\n\nKhan ZA, Tranter TG, Agnaou M, Elkamel A, and Gostick JT*, Dual network extraction algorithm to investigate multiple transport processes in porous materials: Image-based modeling of pore and grain-scale processes. Computers and Chemical Engineering. 123(6), 64-77 (2019)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n51\n\n\nGarcia-Salaberri, PA, Zenyuk I, Hwang G, Vera M, Weber AZ, Gostick JT, Implications of Inherent Inhomogeneities in Thin Carbon Fiber-Based Gas-Diffusion Layers: A Comparative Modeling Study. Electrochimica Acta. 295, 861-874 (2019)\nLinks: Publisher Site\n\n\n\n\n50\n\n\nKim YW, Gostick JT*, Measuring Effective Diffusivity in Porous Media with a Gasket-Free, Radial Arrangement. International Journal of Heat and Mass Transfer. 129(2), 1023-1030 (2019)\nLinks: Publisher Site | Author Postprint"
  },
  {
    "objectID": "publications.html#section-6",
    "href": "publications.html#section-6",
    "title": "Publications",
    "section": "",
    "text": "49\n\n\nJervis R, Kok MDR, Montagut J, Gostick JT, Brett DJL, Shearing PR, X-ray Nano Computed Tomography of Electrospun Fibrous Mats as Flow Battery Electrodes. Energy Technology. 6(12), 2488-2500 (2018).\nLinks: Publisher Site\n\n\n\n\n48\n\n\nGlembockyte V, Frenette M, Mottillo C, Durantini A, Gostick JT, Strukil V, Friscic T, Cosa G, Highly Photostable and Fluorescent Microporous Solids Prepared via Solid-state Entrapment of BODIPY Dyes in a Nascent Metal-Organic Framework. Journal of the American Chemical Society. 140(49), 16882-16887 (2018)\nLinks: Publisher Site\n\n\n\n\n47\n\n\nFraser A, Zhang Z, Merle G, Gbureck U, Ye S, Gostick JT, Barralet JE, Composite Carbon Nanotube Microsphere Coatings for Use as Electrode Supports. Advanced Functional Materials. 28(46), 1803713 (2018)\nLinks: Publisher Site\n\n\n\n\n46\n\n\nWen G, Lee DU, Ren B, Hassan FM, Jiang J, Cano ZP, Gostick JT, Croiset E, Bai Z, Yang L, Chen Z, Orbital Interactions in Bi‐Sn Bimetallic Electrocatalysts for Highly Selective Electrochemical CO2 Reduction toward Formate Production. Advanced Energy Materials. 8(31), 1802427 (2018).\nLinks: Publisher Site\n\n\n\n\n45\n\n\nFraser A, Zhang Z, Merle G, Gostick JG, Barralet JE, Powder Conductivity Assessment Using a Disposable 3D Printed Device. Electroanalysis. 30(9), 1897-1901 (2018).\nLinks: Publisher Site\n\n\n\n\n44\n\n\nJervis, R, Meyer Q, Kok MDR, Brown L, Iacoviello F, Brett D, Neville T, Shearing P, and Gostick JT, In situ Compression and X-ray Computed Tomography of Flow Battery Electrodes. Journal of Energy Chemistry. 27(5), 1353-1361 (2018).\nLinks: Publisher Site\n\n\n\n\n43\n\n\nGarcia-Salaberri PA, Zenyuk I, Shum A, Hwang G, Vera M, Weber AZ, and Gostick JT., Analysis of representative elementary volume and through-plane regional characteristics of carbon-fiber papers: diffusivity, permeability and electrical/thermal conductivity. International Journal of Heat and Mass Transfer. 127(B), 687-703 (2018).\nLinks: Publisher Site\n\n\n\n\n42\n\n\nSabharwal M, Gostick JT, Secanell M, Virtual Liquid Water Intrusion in Fuel Cell Gas Diffusion Media. Journal of the Electrochemical Society. 165(7), F553-F563 (2018)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n41\n\n\nKok MDR, Jervis R, Shearing PR, Brett D, Gostick JT*, Insights into the Effect of Structural Heterogeneity in Carbonized Electrospun Fibrous Mats for Flow Battery Electrodes by X-Ray Tomography. Small. 14(9), 1703616 (2018)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n40\n\n\nTranter TF, Burns A, Gale W, Gostick JT*, Pore network modeling of capillary hysteresis in neutrally wettable fibrous media. Transport in Porous Media. 121(3), 597–620 (2018)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n39\n\n\nMoosavi SM, Niffeler M, Gostick JT, Haussener S, Transport characteristics of saturated gas diffusion layers treated with hydrophobic coatings. Chemical Engineering Science. 172(2), 503-514 (2018)\nLinks: Publisher Site"
  },
  {
    "objectID": "publications.html#section-7",
    "href": "publications.html#section-7",
    "title": "Publications",
    "section": "",
    "text": "38\n\n\nAghighi, M., J. Gostick*, Pore network modeling of phase change in PEM fuel cell fibrous cathode. Journal of Applied Electrochemistry. 47(12), 1323–1338 (2017)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n37\n\n\nSadeghi, M. A., Aghighi, M., Barralet, J. & Gostick, J. T.*, Pore network modeling of reaction-diffusion in hierarchical porous particles: The effects of microstructure. Chemical Engineering Journal 330, 1002–1011 (2017)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n36\n\n\nLiu, S, MDR Kok, YW Kim, JL Baron, FR Brushett, JT Gostick*, Evaluation of Electrospun Fibrous Mats Targeted for Use as Flow Battery Electrodes. J. Electrochem. Soc. 164, A2038–A2048 (2017)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n35\n\n\nGostick, J. T. Versatile and efficient pore network extraction method using marker-based watershed segmentation. Phys. Rev. E 96, 023307 (2017)\nLinks: Publisher Site | Author Postprint | Source Code\n\n\n\n\n34\n\n\nHinebaugh, J., Gostick, J.T., Bazylak, A. Stochastic modeling of polymer electrolyte membrane fuel cell gas diffusion layers – Part 2: A comprehensive substrate model with pore size distribution and heterogeneity effects. International Journal of Hydrogen Energy 42, 15872–15886 (2017)\nLinks: Publisher Site\n\n\n\n\n33\n\n\nTranter, T.G., P. Stogornyuk, J.T. Gostick, A.D. Burns, W.F. Gale, A method for measuring relative in-plane diffusivity of thin and partially saturated porous media: An application to fuel cell gas diffusion layers. International Journal of Heat and Mass Transfer. 110(July), 132–141 (2017)\nLinks: Publisher Site | Author Postprint"
  },
  {
    "objectID": "publications.html#section-8",
    "href": "publications.html#section-8",
    "title": "Publications",
    "section": "",
    "text": "32\n\n\nLopes, J., F.-X. Colson, S. Ye, J.T. Gostick, J.E. Barralet, G. Merle, Graphene modified nanosized Ag electrocomposites. Materials Research Bulletin. 89(May), 42–50 (2016)\nLinks: Publisher Site\n\n\n\n\n31\n\n\nRashapov, R., and J. Gostick*, In-plane effective diffusivity in PEMFC gas diffusion layers. Transport in Porous Media. 115(3), 411-433 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n30\n\n\nZhang Z., J.H. Lopes, S. Ye, J. Gostick, J.E. Barralet, and G. Merle, Electrically Bloomed Platinum Nanoflowers on Exfoliated Graphene: An Efficient Alcohol Oxidation Catalyst. Journal of the Electrochemical Society. 163(10), D615-D621 (2016)\nLinks: Publisher Site\n\n\n\n\n29\n\n\nTranter, T., J. Gostick, A. Burns, and W. Gale. Pore Network Modeling of Compressed Fuel Cell Components with OpenPNM, Fuel Cells. 16(4), p504–515 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n28\n\n\nGostick, J.*, M. Aghighi, J. Hinebaugh, T. Tranter, M.A. Hoeh, H. Day, B. Spellacy, M. Sharqawy, A. Bazylak, A. Burns, W. Lehnert and A. Putz. OpenPNM: A Pore Network Modeling Package. Computing in Science & Engineering. 18(4), p60-74 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n27\n\n\nKok, M., A. Khalifa and J. Gostick*. Multiphysics simulation of the flow battery cathode: cell architecture and electrode optimization. Journal of the Electrochemical Society. 163 (7), A1408-A1419 (2016)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n26\n\n\nAghighi M.A., M.A. Hoeh, W. Lehnert, G. Merle, and J. Gostick*, Simulation of a Full Fuel Cell Membrane Electrode Assembly Using Pore Network Modeling. Journal of the Electrochemical Society. 163(4), p.F384-392 (2016)\nLinks: Publisher Site | Open Access PDF"
  },
  {
    "objectID": "publications.html#section-9",
    "href": "publications.html#section-9",
    "title": "Publications",
    "section": "",
    "text": "25\n\n\nSchalenbach, M., M.A. Hoeh, J. Gostick, W. Lueke and D. Stolten. Gas Permeation through Nafion®. Part 2: Resistor Network Model. Journal of Physical Chemistry C. 119(45), p.25156–25169 (2015)\nLinks: Publisher Site\n\n\n\n\n24\n\n\nQuesnel C., R. Cao, J. Lehr, A. Kietzig, A. Weber and J Gostick*. Dynamic Percolation Behavior in Double Layered Porous Materials. Journal of Physical Chemistry C. 119(40), p.22934–22944 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n23\n\n\nGostick, J. and A. Weber, Resistor-Network Modeling of Ionic Conduction in Polymer Electrolytes. Electrochimica Acta. 179(October), p.137-145 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n22\n\n\nLopez, J., G. Merle, S. Ye , J. Gostick, J. Barralet, Electrocatalytic oxygen reduction performance of silver nanoparticle decorated electrochemically exfoliated graphene. Langmuir. 31(35), p.9718-9727 (2015)\nLinks: Publisher Site\n\n\n\n\n21\n\n\nGarcía-Salaberri, P.A., J. Gostick, G. Hwang, A.Z. Weber and M. Vera. Effective diffusivity in partially-saturated carbon-fiber gas diffusion layers: Effect of local saturation and application to macroscopic continuum models. Journal of Power Sources. 296: p. 440–453 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n20\n\n\nGarcía-Salaberri, P.A., G. Hwang, M. Vera, A.Z. Weber and J. Gostick*. Effective diffusivity in partially-saturated carbon-fiber gas diffusion layers: Effect of through-plane saturation distribution. International Journal of Heat and Mass Transfer. 86: p. 319–333 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n19\n\n\nRashapov, R., J. Unno and J. Gostick*, Characterization of PEMFC gas diffusion layer porosity. Journal of the Electrochemical Society. 162(1): p. F603-F612 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n18\n\n\nRashapov, R., F. Imami and J. Gostick*, Experimental method of in-plane effective diffusion coefficient measurements of porous media. International Journal of Heat and Mass Transfer. 85: p. 367-374 (2015)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n17\n\n\nKok, M.R.D., J. Gostick*, Transport properties of electrospun fibrous membranes with controlled anisotropy. Journal of Membrane Science. 1(473): p. 237-244 (2015)\nLinks: Publisher Site | Author Postprint"
  },
  {
    "objectID": "publications.html#section-10",
    "href": "publications.html#section-10",
    "title": "Publications",
    "section": "",
    "text": "16\n\n\nMorris, D., S. Liu, D. Villegas and J. Gostick*, Electrical conductivity of fuel cell catalyst layers under controlled relative humidity. ACS Applied Materials & Interfaces. 6(21): p. 18609–18618 (2014)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n15\n\n\nGostick, J.*, Random pore network modeling of fibrous PEMFC gas diffusion media using Voronoi and Delaunay tessellations. Journal of the Electrochemical Society. 160(8): p. F731-F743 (2013)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n14\n\n\nMorris, D and J. Gostick*, Determination of the in-plane components of the electrical conductivity tensor in PEM fuel cell gas diffusion layers. Electrochimica Acta. 85(1): p. 665-673 (2012)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n13\n\n\nWeber, A.Z., M.M. Mench, J.P. Meyers, P.N. Ross, J. Gostick, and Q. Liu, Redox flow batteries, a review. Journal of Applied Electrochemistry. 41(10): p. 1137-1164 (2011)\nLinks: Publisher Site | Open Access PDF\n\n\n\n\n12\n\n\nGostick, J.* and M.A. Ioannidis, Comment on “Effect of gas diffusion layer properties on the time of breakthrough” by Shahraeeni and Hoorfar. Journal of Power Sources. 196(22): p. 9844 (2011).\nLinks: Publisher Site\n\n\n\n\n11\n\n\nHwang, G.S., M. Kaviany, J. Gostick, B. Kientiz, A.Z. Weber, and M.H. Kim, Role of water states on water uptake and proton transport in Nafion using molecular simulations and bimodal network. Polymer. 52(12): p. 2584-2593 (2011)\nLinks: Publisher Site\n\n\n\n\n10\n\n\nBunmark, N., S. Limtrakul, M.W. Fowler, T. Vatanatham, and J. Gostick, Assisted water management in a PEMFC with a modified flow field and its effect on performance. International Journal of Hydrogen Energy. 35(13): p. 6887-6896 (2010)\nLinks: Publisher Site\n\n\n\n\n9\n\n\nGostick, J., M.A. Ioannidis, M.D. Pritzker, and M.W. Fowler, Impact of liquid water on reactant mass transfer in PEM fuel cell electrodes. Journal of the Electrochemical Society. 57(4): p. B563-B571 (2010)\nLinks: Publisher Site | Author Postprint"
  },
  {
    "objectID": "publications.html#before-2010",
    "href": "publications.html#before-2010",
    "title": "Publications",
    "section": "",
    "text": "8\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, Wettability and capillary behavior of fibrous gas diffusion media for polymer electrolyte membrane fuel cells. Journal of Power Sources. 194: p. 433-444 (2009)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n7\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, On the role of the microporous layer in PEMFC operation. Electrochemistry Communications. 11(3): p. 576-579 (2009)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n6\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, Direct measurement of the capillary pressure characteristics of water-air-gas diffusion layer systems for PEM fuel cells. Electrochemistry Communications. 10: p. 1520-1523 (2008)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n5\n\n\nGostick, J., M.A. Ioannidis, M.W. Fowler, and M.D. Pritzker, Pore network modeling of fibrous gas diffusion layers for polymer electrolyte membrane fuel cells. Journal of Power Sources. 173: p. 277-290 (2007)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n4\n\n\nGostick, J., M.W. Fowler, M.D. Pritzker, M.A. Ioannidis, and L.M. Behra, In-Plane and through-plane gas permeability of carbon fiber electrode backing layers. Journal of Power Sources. 162 (1): p. 228-238 (2006)\nLinks: Publisher Site | Author Postprint\n\n\n\n\n3\n\n\nGostick, J., M.W. Fowler, M.A. Ioannidis, M.D. Pritzker, Y.M. Volfkovich, and A. Sakars, Capillary pressure and hydrophilic porosity in gas diffusion layers for polymer electrolyte fuel cells. Journal of Power Sources. 156(2): p. 375-387 (2006)\nLinks: Publisher Site\n\n\n\n\n2\n\n\nGostick, J., M. Pritzker, A. Lohi, and H.D. Doan, Mass transfer variation within a packed bed and its relation to liquid distribution. Chemical Engineering Journal. 100(1-3): p. 33-41 (2004)\nLinks: Publisher Site\n\n\n\n\n1\n\n\nGostick, J., H.D. Doan, A. Lohi, and M.D. Pritzker, Investigation of Local Mass Transfer in a Packed Bed of Pall Rings Using a Limiting Current Technique. Industrial and Engineering Chemistry Research. 42(15): p. 3626-3634 (2003)\nLinks: Publisher Site"
  },
  {
    "objectID": "publications.html#book-chapters",
    "href": "publications.html#book-chapters",
    "title": "Publications",
    "section": "",
    "text": "6\n\n\nGostick JT, Kok MDR, Jervis R. Electrospun Fibrous Mats, in: Album of Porous Media. Médici, E.F., Otero, A.D. Editors. 2023, Springer.\nLinks: Publisher Site\n\n\n\n\n5\n\n\nSecannel M, Garcia-Salaberri PA, Gostick JT. Porous Electrodes for PEM Fuel Cells and Electrolyzers, in Encyclopedia of Energy Storage. M. Guarnieri, Editor. 2021. Elsevier: Amsterdam.\nLinks: Publisher Site\n\n\n\n\n4\n\n\nAmini K, Sadeghi MA, Pritzker MD and Gostick JT*, Porous Electrodes for Redox Flow Batteries, in Encyclopedia of Energy Storage. M. Guarnieri, Editor. 2021. Elsevier: Amsterdam.\nLinks: Publisher Site\n\n\n\n\n3\n\n\nGostick JT. Strain, Force, and Mass, in Experimental Methods and Instrumentation for Chemical Engineers. G. Patience, Editor. 2016. Elsevier: Amsterdam.\n\n\n\n\n2\n\n\nGostick JT, Ioannidis MA, Pritzker MD, and Fowler MW. Porosimetry and Characterization of the Capillary Properties of Gas Diffusion Media, in Handbook of PEM Fuel Cell Durability, H. Wang, X.-Z. Yuan, and H. Li, Editors. 2011, Taylor Francis: Baton Rouge.\n\n\n\n\n1\n\n\nGostick JT, Ioannidis MA, Pritzker MD, Fowler MW. Characterization of the Capillary Properties of Gas Diffusion Media, in Modern Aspects of Electrochemistry, C.Y. Wang and U. Pasaogullari, Editors. 2010, Springer: Berlin."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Professor Jeff Gostick is the Azzam-Dullien Professor of Chemical Engineering at the University of Waterloo, where he runs the Porous Materials Engineering & Analysis Lab. Prior to joining UofW he was a Professor in Chemical Engineering at McGill University in Montreal from 2010 to 2016. His PhD work focused on multiphase transport phenomena in hydrogen fuel cells. Upon completion of his PhD from the University of Waterloo in 2008 he did post-doctoral work at Lawrence Berkeley National Lab, where he used the ALS synchrotron to perform ‘cat scans’ on electrodes, which led to his current interest in volumetric image analysis. He is the lead developer of the open-source software projects OpenPNM and PoreSpy, both of which focus on understanding transport phenomena in porous materials at the pore-scale. Prof Gostick was named an Emerging Leader by the Canadian Society of Chemical Engineering in 2019, and was honored with the Azzam-Dullien Professorship in Transport in Porous Media in 2022. With the help of his current and former graduate students, which include dozens of PhD and Master’s students, he has published over 100 peer-reviewed journal articles, 6 book chapters, and given hundreds of talks at conferences around the world."
  },
  {
    "objectID": "about.html#prof.-gosticks-bio",
    "href": "about.html#prof.-gosticks-bio",
    "title": "About",
    "section": "",
    "text": "Professor Jeff Gostick is the Azzam-Dullien Professor of Chemical Engineering at the University of Waterloo, where he runs the Porous Materials Engineering & Analysis Lab. Prior to joining UofW he was a Professor in Chemical Engineering at McGill University in Montreal from 2010 to 2016. His PhD work focused on multiphase transport phenomena in hydrogen fuel cells. Upon completion of his PhD from the University of Waterloo in 2008 he did post-doctoral work at Lawrence Berkeley National Lab, where he used the ALS synchrotron to perform ‘cat scans’ on electrodes, which led to his current interest in volumetric image analysis. He is the lead developer of the open-source software projects OpenPNM and PoreSpy, both of which focus on understanding transport phenomena in porous materials at the pore-scale. Prof Gostick was named an Emerging Leader by the Canadian Society of Chemical Engineering in 2019, and was honored with the Azzam-Dullien Professorship in Transport in Porous Media in 2022. With the help of his current and former graduate students, which include dozens of PhD and Master’s students, he has published over 100 peer-reviewed journal articles, 6 book chapters, and given hundreds of talks at conferences around the world."
  },
  {
    "objectID": "posts/2025-01-13/index.html",
    "href": "posts/2025-01-13/index.html",
    "title": "Tips and Tricks",
    "section": "",
    "text": "STL files are a common way to represent 3D volumes. They are used by 3D printers and CFD models, among others. I was recently handed a batch of STL files by someone that had generated packings of randomly packed particles. They used physics-based simulations to determine where the particles would settle under the influence of gravity, providing realistic geometries for doing flow simulations. I spent a bit of time trying to find a simple way to convert these files to the basic voxelized representation that we require for most of our analysis, like extracting networks for use in OpenPNM, or simulating non-wetting fluid invasion.\nThe solution I found was pretty simple, but I had to piece together several bits of information from different tutorials, so I thought I’d collect it here.\nAt first I discovered the numpy-stl which allowed me to read the files successfully and plot something, but it didn’t seem to offer the tools I needed to convert the data to a voxel image. After some internet searching I (re)discovered pyvista, which I don’t regularly use, but this is not the first time it has come to rescue so perhaps I should dig into this package deeper in the near future.\nAnyway, PyVista offers a lot of tools for converting spatial data between formats. In fact, the challenge was to determine which of the many tools was best suited to do the job. It was also a bit of a trick to understand the relationship between “point” and “cell” data, which I’ll explain below.\n\n\nThe first step was easy. PyVista has a top-level function for reading STL files, not surprizingly called read(). This function reads the file and creates a mesh object. Conveniently, the mesh object has a plot method for quick confirmation that things worked:\nimport pyvista as pv\nimport numpy as np\n\nmesh = pv.read('file.stl)\nmesh.plot()\n\n\n\n\nNow comes the hard part. We are trying to create a voxel image, in the form of a 3D Numpy ndarray, where each voxel contains a boolean value indicating whether it lies in the void phase or not. This means that we need to decide if a given point in space lies within the mesh or not, then assign the corresponding boolean value to the corresponding voxel in the ndarray. In terms of the above image, this means determining whether a point lies inside one of the ellipses or not. To do this we first need to define the “points” that will become the voxels in the final image. Then we want to ask PyVista to compute whether each point lies inside the mesh or not. There are two ways to do this.\n\n\nThe simplest way is to use the appropriately named voxelize_volume function. This requires that we pass in the mesh and also specify the density of the voxelization. The density controls to the number of points that we wish to have in the final image. A lower density means more points, which seems a bit counterintuitive actually. Consider that image resolution is usually given as as a voxel size expressed as \\(m/voxel\\), but could just as easily be given as \\(m^3/voxel\\), which would mean that a smaller number corresponds to higher resolution or more points for a given image. The units of “density” in my experience are usually as “some value per unit volume”, so if we wanted to express image resolution as a density it should be \\(voxels/m^3\\), in which case a higher value would result in more points. In fact, the reason a lower density gives more points is because this value is actually used as a step-size in Numpy’s arange function, like np.arange(start, step, density); hence a smaller value of density means more points are generated. Nonetheless, the function is super helpful so I’ll let this issue slide and thank the author(s) for their work. Anyway, this function is used as follows:\nvox = pv.voxelize_volume(mesh, density=0.05)\nvox is not actually a voxel image (yet). It’s a new mesh object where the triangulated surfaces visible in the original rendering have been replaced with cubic elements. Note that this process is quite slow. It took over an hour on my (admittedly antiquated) workstation to generate a voxel image of size ~400-cubed. Luckily, this process only needs to be done once for each mesh, so waiting overnight for a batch to run is not really too painful.\nThe voxelized mesh can be visualized easily as well:\nslices = vox.slice_orthogonal()\nslices.plot(scalars='InsideMesh')\nWhich yields the following, where the voxelized nature of the surfaces can seen:\n\nThe final step is converting this vox mesh object into a Numpy array. The voxelization process not only generates a cubic mesh, but it also determine which voxel represents solid or not. This information is stored on the vox dictionary object under the key 'InsideMesh', as a vector containing 1 for voxels inside the ellipsoids, and 0 outside. Converting this vector into a cubic image was the last hurdle. I needed to reshape it from a linear vector into 3D array, but first I needed to determine what shape to use.\nAlthough the the 'InsideMesh' array contains one value for each voxel, the vox mesh itself has coordinates for the corners of each voxel. One can thus determine the number of cells by looking at the number of number of corners defined in the mesh (i.e. looking at the shape of vox.x, vox.y or vox.z), then subtracting 1 from each axis, to not count the extra layer of points at the end of each axis. Also, I learned that it is necessary to specify the Fortran ordering of the data using the order='F' option when reshaping:\nim = np.reshape(\n    vox['InsideMesh'], \n    np.array(vox.meshgrid[0].shape)-1, \n    order='F',\n)\nThe result is a standard voxel image in the form of a Numpy ndarray, perfectly suited for simulations.\n\nGiven how long the voxelize_volume() function requires, it is probably a good idea to save the array for future use:\nnp.save('stl_as_ndarray', im)\n\n\n\nAlthough the above method worked great for me, the slowness inspired me to investigate whether an alternative approach might be faster. A bit more searching led to the following solution, suggested by Github user @dveni:\ndef stl_to_array(mesh: pv.PolyData, density: float):\n    x_min, x_max, y_min, y_max, z_min, z_max = mesh.bounds\n    x = np.arange(x_min, x_max, density)\n    y = np.arange(y_min, y_max, density)\n    z = np.arange(z_min, z_max, density)\n    x, y, z = np.meshgrid(x, y, z)\n\n    # Create unstructured grid from the structured grid\n    grid = pv.StructuredGrid(x, y, z)\n    ugrid = pv.UnstructuredGrid(grid)\n\n    # Get part of the mesh within the mesh's bounding surface.\n    selection = ugrid.select_enclosed_points(\n        mesh.extract_surface(),\n        tolerance=0.0,\n        check_surface=False,\n    )\n    mask = selection['SelectedPoints'].view(bool)\n1    mask = mask.reshape(x.shape, order='F')\n    mask = np.array(mask)\n    return mask\n\n1\n\nNote that the here x is coming from meshgrid, but it was used to compute the cell centers so there is no need to subtract 1, unlike the meshgrid attribute of the vox mesh returned by voxelize_volume which defines the cell corners.\n\n\nThis function is clearly less convenient than just using voxelize_volume, but I thought it might be faster because it uses a different method for finding whether a point is inside the mesh or not. Specifically it uses the select_enclosed_points() method of the UnstructuredGrid class. I was hoping that this might be faster since it searches for points without also creating a voxelized mesh object. I did an informal comparison of both methods and found them to require about equal times, so I will probably use the voxelize_volume() function in future since it’s easier to remember, and it is probably helpful to have the mesh object handy for future use.\n\n\n\n\nI did notice however, that the two methods produce a different result. The voxelize_volume() function seems to produce an image with more solid voxels, resulting in a structure that is a over packed:\n\nI am guessing that each of these methods uses a different behavior for identifying voxels laying on the boundary, perhaps it’s the difference between using &lt; instead of a &lt;=.\nIn any event, the select_enclosed_points method seems preferable since the particles are much better defined. It is possible to dilate the particles to get something similar to the voxelize_volume result, while eroding the particles from voxelize_volume will not give the clear separation of the select_enclosed_points method.\n\n\n\nDespite the much cleaner implementation of the voxel_volume method, I think I will be using the select_enclosed_points method since it gives better results. The speed (or lack thereof) of the two methods is about equal, so there is nothing to chose there. The only downside of the select_enclosed_points method is that it does not create a rectilinear mesh object, which may or may not be useful for some uses. Perhaps the stl_to_array function should be added to the io module of PoreSpy, then the ugliness of the implementation will be hidden from sight."
  },
  {
    "objectID": "posts/2025-01-13/index.html#using-pyvista-to-read-stl-files.",
    "href": "posts/2025-01-13/index.html#using-pyvista-to-read-stl-files.",
    "title": "Tips and Tricks",
    "section": "",
    "text": "The first step was easy. PyVista has a top-level function for reading STL files, not surprizingly called read(). This function reads the file and creates a mesh object. Conveniently, the mesh object has a plot method for quick confirmation that things worked:\nimport pyvista as pv\nimport numpy as np\n\nmesh = pv.read('file.stl)\nmesh.plot()"
  },
  {
    "objectID": "posts/2025-01-13/index.html#voxelizing-the-mesh",
    "href": "posts/2025-01-13/index.html#voxelizing-the-mesh",
    "title": "Tips and Tricks",
    "section": "",
    "text": "Now comes the hard part. We are trying to create a voxel image, in the form of a 3D Numpy ndarray, where each voxel contains a boolean value indicating whether it lies in the void phase or not. This means that we need to decide if a given point in space lies within the mesh or not, then assign the corresponding boolean value to the corresponding voxel in the ndarray. In terms of the above image, this means determining whether a point lies inside one of the ellipses or not. To do this we first need to define the “points” that will become the voxels in the final image. Then we want to ask PyVista to compute whether each point lies inside the mesh or not. There are two ways to do this.\n\n\nThe simplest way is to use the appropriately named voxelize_volume function. This requires that we pass in the mesh and also specify the density of the voxelization. The density controls to the number of points that we wish to have in the final image. A lower density means more points, which seems a bit counterintuitive actually. Consider that image resolution is usually given as as a voxel size expressed as \\(m/voxel\\), but could just as easily be given as \\(m^3/voxel\\), which would mean that a smaller number corresponds to higher resolution or more points for a given image. The units of “density” in my experience are usually as “some value per unit volume”, so if we wanted to express image resolution as a density it should be \\(voxels/m^3\\), in which case a higher value would result in more points. In fact, the reason a lower density gives more points is because this value is actually used as a step-size in Numpy’s arange function, like np.arange(start, step, density); hence a smaller value of density means more points are generated. Nonetheless, the function is super helpful so I’ll let this issue slide and thank the author(s) for their work. Anyway, this function is used as follows:\nvox = pv.voxelize_volume(mesh, density=0.05)\nvox is not actually a voxel image (yet). It’s a new mesh object where the triangulated surfaces visible in the original rendering have been replaced with cubic elements. Note that this process is quite slow. It took over an hour on my (admittedly antiquated) workstation to generate a voxel image of size ~400-cubed. Luckily, this process only needs to be done once for each mesh, so waiting overnight for a batch to run is not really too painful.\nThe voxelized mesh can be visualized easily as well:\nslices = vox.slice_orthogonal()\nslices.plot(scalars='InsideMesh')\nWhich yields the following, where the voxelized nature of the surfaces can seen:\n\nThe final step is converting this vox mesh object into a Numpy array. The voxelization process not only generates a cubic mesh, but it also determine which voxel represents solid or not. This information is stored on the vox dictionary object under the key 'InsideMesh', as a vector containing 1 for voxels inside the ellipsoids, and 0 outside. Converting this vector into a cubic image was the last hurdle. I needed to reshape it from a linear vector into 3D array, but first I needed to determine what shape to use.\nAlthough the the 'InsideMesh' array contains one value for each voxel, the vox mesh itself has coordinates for the corners of each voxel. One can thus determine the number of cells by looking at the number of number of corners defined in the mesh (i.e. looking at the shape of vox.x, vox.y or vox.z), then subtracting 1 from each axis, to not count the extra layer of points at the end of each axis. Also, I learned that it is necessary to specify the Fortran ordering of the data using the order='F' option when reshaping:\nim = np.reshape(\n    vox['InsideMesh'], \n    np.array(vox.meshgrid[0].shape)-1, \n    order='F',\n)\nThe result is a standard voxel image in the form of a Numpy ndarray, perfectly suited for simulations.\n\nGiven how long the voxelize_volume() function requires, it is probably a good idea to save the array for future use:\nnp.save('stl_as_ndarray', im)\n\n\n\nAlthough the above method worked great for me, the slowness inspired me to investigate whether an alternative approach might be faster. A bit more searching led to the following solution, suggested by Github user @dveni:\ndef stl_to_array(mesh: pv.PolyData, density: float):\n    x_min, x_max, y_min, y_max, z_min, z_max = mesh.bounds\n    x = np.arange(x_min, x_max, density)\n    y = np.arange(y_min, y_max, density)\n    z = np.arange(z_min, z_max, density)\n    x, y, z = np.meshgrid(x, y, z)\n\n    # Create unstructured grid from the structured grid\n    grid = pv.StructuredGrid(x, y, z)\n    ugrid = pv.UnstructuredGrid(grid)\n\n    # Get part of the mesh within the mesh's bounding surface.\n    selection = ugrid.select_enclosed_points(\n        mesh.extract_surface(),\n        tolerance=0.0,\n        check_surface=False,\n    )\n    mask = selection['SelectedPoints'].view(bool)\n1    mask = mask.reshape(x.shape, order='F')\n    mask = np.array(mask)\n    return mask\n\n1\n\nNote that the here x is coming from meshgrid, but it was used to compute the cell centers so there is no need to subtract 1, unlike the meshgrid attribute of the vox mesh returned by voxelize_volume which defines the cell corners.\n\n\nThis function is clearly less convenient than just using voxelize_volume, but I thought it might be faster because it uses a different method for finding whether a point is inside the mesh or not. Specifically it uses the select_enclosed_points() method of the UnstructuredGrid class. I was hoping that this might be faster since it searches for points without also creating a voxelized mesh object. I did an informal comparison of both methods and found them to require about equal times, so I will probably use the voxelize_volume() function in future since it’s easier to remember, and it is probably helpful to have the mesh object handy for future use."
  },
  {
    "objectID": "posts/2025-01-13/index.html#comparing-the-outputs-of-the-two-methods",
    "href": "posts/2025-01-13/index.html#comparing-the-outputs-of-the-two-methods",
    "title": "Tips and Tricks",
    "section": "",
    "text": "I did notice however, that the two methods produce a different result. The voxelize_volume() function seems to produce an image with more solid voxels, resulting in a structure that is a over packed:\n\nI am guessing that each of these methods uses a different behavior for identifying voxels laying on the boundary, perhaps it’s the difference between using &lt; instead of a &lt;=.\nIn any event, the select_enclosed_points method seems preferable since the particles are much better defined. It is possible to dilate the particles to get something similar to the voxelize_volume result, while eroding the particles from voxelize_volume will not give the clear separation of the select_enclosed_points method."
  },
  {
    "objectID": "posts/2025-01-13/index.html#conclusions",
    "href": "posts/2025-01-13/index.html#conclusions",
    "title": "Tips and Tricks",
    "section": "",
    "text": "Despite the much cleaner implementation of the voxel_volume method, I think I will be using the select_enclosed_points method since it gives better results. The speed (or lack thereof) of the two methods is about equal, so there is nothing to chose there. The only downside of the select_enclosed_points method is that it does not create a rectilinear mesh object, which may or may not be useful for some uses. Perhaps the stl_to_array function should be added to the io module of PoreSpy, then the ugliness of the implementation will be hidden from sight."
  },
  {
    "objectID": "posts/2023-10-11/index.html",
    "href": "posts/2023-10-11/index.html",
    "title": "4-Phase Pore Network Model of a Fuel Cell Catalyst Layer",
    "section": "",
    "text": "A few days ago our lastest paper went “live” in Applied Energy. I don’t normally post announcements about this sort of thing, but this case is noteworthy. Firstly, it’s a really great paper, with contributions from more collaborators than usual. Shawn Litster’s group at CMU provided volumetric images. Researchers from the fuel cell research team at GM provided the experimental performance and degradation data. Dave Muller’s group from Cornell measured the Pt distribution in the catalyst layer. So lots of brain power was behind this work…but that is not the part I want to brag about. This paper represents the culmination of all the work conducted in the PMEAL lab over the last 5 years, and I wanted to take a moment to summarize just how many developments were required to get here.\n\n\nThe ability to reliably extract pore networks from images has always been a challenge. Martin Blunt has been generous with sharing of his group’s MaximalBall code since he published it in 2010, but this code was not exactly user friendly. In 2017 I moved from McGill to UWaterloo and had a few semesters in a row with no teaching. This turned out to be the perfect opportunity to work on our own network extraction code, which we called SNOW (since catchy acronyms are always a good idea!). Having our own extraction code, written in python, and frankly quite simple, was a huge boost for us since we could customize and optimize it at will. We leveraged this ability to make several important extensions to the code.\n\nAt some point we realized that not only could the network extraction be applied to both the solid and void phases, but also that we could connect these two networks to allow exchange of material between the phases. This was the subject of a paper in Computers in Chemical Engineering, and utilized for modeling Li-ion battery discharge. Interconnected, multiphase network extraction is essential for ‘multiphysics’ modeling in PNMs.\n\n\n\n\nThe watershed filter is the main step in the SNOW algorithm, but it can be annoyingly slow on large images. In 2020 we found that this filter could be applied to an image in chunks and then pieced back together to nearly perfect results, if a sufficent amount of overlap was used between the chunks. The ability to process many chunks in parallel is obviously quite handy when dealing with massive images, assuming you have a PC with lots of cores and enough RAM.\n\n\n\n\nThe above progress in network extraction allowed us to build “the ultimate” pore network model of a fuel cell catalyst layer. These layers consist of FOUR phases: void, ionomer, carbon and platinum. Gas diffusion in the void space and dissolves into the ionomer phase. Ions travel through the ionomer phase and meet dissolved gas at the catalyst sites. Electrons travel through the carbon backbone to the reaction sites as well. The transport of all these species is directly coupled to the microscopic structure of each phase so this problem is a great candidate for PNMs.\nWe started applying our multiphase network extraction tool to artificially generated images, and gave a talk about this at an ECS meeting. Shawn Litster was in the audience and mentioned that he had REAL images of catalyst layers obtained with FIB-SEM at 2nm voxel resolution (in all three directions!). So we switched to working on these images. This required some experimenting with ways to insert carbon spheres and Pt sites into the image, but eventually we had a viable image. The problem was that even with such excellent resolution, the network extraction tool had trouble with the smaller features…so we had to magnify the image by 4x.\nSo we had 4 phase image that was already quite large (1600 voxels cubed) that was zoomed up by another factor of 4, and we needed to perform multiphase network extraction on it. This felt like all the hard work over the past 5+ years was leading to this moment. The results speak form themselves:\n\n\n\n\nThe pictures look great, but the model worked great too. We were able to predict the polarization behavior of the cell at “beginnng of life” (i.e. new) and after accelerated stress tests caused catalyst degradation. The interesting thing about this result is that we were able to capture most of the degradation just by deleting Pt sites from the network, in proportion to the loss of Pt surface area. There must be a few other mechanisms occuring too, but considering only this single, simple thing was enough to largely describe the trends.\n\n\n\n\nSo big congratulations to Amin Sadeghi, who was my PhD student then postdoctoral associate during the years the above work was being done. Also thanks to all the collaborators and contributors to this project."
  },
  {
    "objectID": "posts/2023-10-11/index.html#multiphase-network-extraction",
    "href": "posts/2023-10-11/index.html#multiphase-network-extraction",
    "title": "4-Phase Pore Network Model of a Fuel Cell Catalyst Layer",
    "section": "",
    "text": "The ability to reliably extract pore networks from images has always been a challenge. Martin Blunt has been generous with sharing of his group’s MaximalBall code since he published it in 2010, but this code was not exactly user friendly. In 2017 I moved from McGill to UWaterloo and had a few semesters in a row with no teaching. This turned out to be the perfect opportunity to work on our own network extraction code, which we called SNOW (since catchy acronyms are always a good idea!). Having our own extraction code, written in python, and frankly quite simple, was a huge boost for us since we could customize and optimize it at will. We leveraged this ability to make several important extensions to the code.\n\nAt some point we realized that not only could the network extraction be applied to both the solid and void phases, but also that we could connect these two networks to allow exchange of material between the phases. This was the subject of a paper in Computers in Chemical Engineering, and utilized for modeling Li-ion battery discharge. Interconnected, multiphase network extraction is essential for ‘multiphysics’ modeling in PNMs."
  },
  {
    "objectID": "posts/2023-10-11/index.html#parallelized-network-extraction",
    "href": "posts/2023-10-11/index.html#parallelized-network-extraction",
    "title": "4-Phase Pore Network Model of a Fuel Cell Catalyst Layer",
    "section": "",
    "text": "The watershed filter is the main step in the SNOW algorithm, but it can be annoyingly slow on large images. In 2020 we found that this filter could be applied to an image in chunks and then pieced back together to nearly perfect results, if a sufficent amount of overlap was used between the chunks. The ability to process many chunks in parallel is obviously quite handy when dealing with massive images, assuming you have a PC with lots of cores and enough RAM."
  },
  {
    "objectID": "posts/2023-10-11/index.html#phase-network-extraction-of-a-2nmvoxel-pfib-sem-image",
    "href": "posts/2023-10-11/index.html#phase-network-extraction-of-a-2nmvoxel-pfib-sem-image",
    "title": "4-Phase Pore Network Model of a Fuel Cell Catalyst Layer",
    "section": "",
    "text": "The above progress in network extraction allowed us to build “the ultimate” pore network model of a fuel cell catalyst layer. These layers consist of FOUR phases: void, ionomer, carbon and platinum. Gas diffusion in the void space and dissolves into the ionomer phase. Ions travel through the ionomer phase and meet dissolved gas at the catalyst sites. Electrons travel through the carbon backbone to the reaction sites as well. The transport of all these species is directly coupled to the microscopic structure of each phase so this problem is a great candidate for PNMs.\nWe started applying our multiphase network extraction tool to artificially generated images, and gave a talk about this at an ECS meeting. Shawn Litster was in the audience and mentioned that he had REAL images of catalyst layers obtained with FIB-SEM at 2nm voxel resolution (in all three directions!). So we switched to working on these images. This required some experimenting with ways to insert carbon spheres and Pt sites into the image, but eventually we had a viable image. The problem was that even with such excellent resolution, the network extraction tool had trouble with the smaller features…so we had to magnify the image by 4x.\nSo we had 4 phase image that was already quite large (1600 voxels cubed) that was zoomed up by another factor of 4, and we needed to perform multiphase network extraction on it. This felt like all the hard work over the past 5+ years was leading to this moment. The results speak form themselves:"
  },
  {
    "objectID": "posts/2023-10-11/index.html#multiphysics-simulation-of-pemfc-polarization-curves",
    "href": "posts/2023-10-11/index.html#multiphysics-simulation-of-pemfc-polarization-curves",
    "title": "4-Phase Pore Network Model of a Fuel Cell Catalyst Layer",
    "section": "",
    "text": "The pictures look great, but the model worked great too. We were able to predict the polarization behavior of the cell at “beginnng of life” (i.e. new) and after accelerated stress tests caused catalyst degradation. The interesting thing about this result is that we were able to capture most of the degradation just by deleting Pt sites from the network, in proportion to the loss of Pt surface area. There must be a few other mechanisms occuring too, but considering only this single, simple thing was enough to largely describe the trends."
  },
  {
    "objectID": "posts/2023-10-11/index.html#conclusion",
    "href": "posts/2023-10-11/index.html#conclusion",
    "title": "4-Phase Pore Network Model of a Fuel Cell Catalyst Layer",
    "section": "",
    "text": "So big congratulations to Amin Sadeghi, who was my PhD student then postdoctoral associate during the years the above work was being done. Also thanks to all the collaborators and contributors to this project."
  },
  {
    "objectID": "posts/2022-06-03/index.html",
    "href": "posts/2022-06-03/index.html",
    "title": "PMEAL Members Represent Strong at CRSC 2022",
    "section": "",
    "text": "PMEAL Members Represent Strong at CRSC 2022\nThe 4th annual Canadian Research Software Conference was held earlier this week. Several members of the PMEAL group were present, and for the 4th straight year we won a top poster award! Congratulations to Niloo for her hard work and enthralling the audience with her work on the use of AI to predict diffusive conductance for use in extracted pore networks. This poster was based on her recently published paper Computers and Geosciences. Also, a nod to Amin who presented a 20 minute short talk on the use of Julia to speed up numerical computations. This talk led to many follow-up conversations during the coffee breaks, and was really very convincing. Maybe OpenPNM V4 will be in Julia?"
  },
  {
    "objectID": "posts/2022-12-24/index.html",
    "href": "posts/2022-12-24/index.html",
    "title": "Congratulations to Niloo for successfully defending her PhD!",
    "section": "",
    "text": "Congratulations to Niloo for successfully defending her PhD!\nNiloofar Misaghian joined the PMEAL group in the fall of 2018, and after 4 years of intense learning and research she successfully defended her thesis on December 9th. It was a slam-dunk, with 3 first-author papers, plus authorship on another. Not to mention many contributions to the OpenPNM and PoreSpy code bases. Thanks for all your hard work Niloo!"
  },
  {
    "objectID": "posts/2021-12-07/index.html",
    "href": "posts/2021-12-07/index.html",
    "title": "Prof Gostick Named Inaugural Azzam-Dullien Endowed Professor",
    "section": "",
    "text": "Prof Gostick Named Inaugural Azzam-Dullien Endowed Professor\nThe Department of Chemical Engineering recently received a generous donation from a former PhD student, Dr. Mohamed Azzam. Dr. Azzam undertook his PhD studies under Prof. Francis Dullien in the early 1970’s. His work focused on hydraulic flow through complex conduits (see [1], [2], [3], [4], [5]), and contributed to the development of the pore network modeling approach pioneered by Prof. Dullien and his team later that decade. After graduation Dr. Azzam founded a successful company and had recently decided to honor Prof. Dullien and his former department with a generous gift. The Azzam-Dullien Endowed Professorship was created, and Prof. Jeff Gostick was named as the inaugural recipient for a term of 4 years. This endowment is earmarked to fund graduate students in the area of transport in porous media, which will ensure the continued legacy of porous media research at the University of Waterloo."
  }
]